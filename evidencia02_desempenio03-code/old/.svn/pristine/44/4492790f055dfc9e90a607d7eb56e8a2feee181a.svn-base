<?php 
include ('admin_controller.php');

class Management_reports extends Admin_Controller {
	function Management_reports()
    {
		parent::Admin_Controller();        
        
        $this->tpl->assign("resource_path", "administrator/management_reports");
        
        $this->load->model('rptgroupmdl');
        $this->load->model('rptreportnamemdl');
        $this->load->model('rptprofilegroupmdl');
        $this->load->model('rptprofilegroupreportmdl');
        //$this->load->model('menu_model');
        //$this->tpl->assign('tab_page', true);
    		//$this->tpl->assign('noedit', true);
    		//$this->tpl->assign('no_grid_buttons', true);
    }

	public function index()
	{
    $this->tpl->assign(array("list_title" => "Reports dynamic menu"));
		$this->tpl->assign_include("dynamic_tpl", "administrator/management_reports/tbase");
		$this->tpl->view("parts/ibase", $this->lang->language);
	}
  
  public function profiles(){
		//$this->tpl->assign("list_title", "Profile List");
    //$this->tpl->assign("resource_grid", "grid_profiles");
		$this->tpl->assign("no_grid_buttons", true);
		$this->tpl->assign_include("dynamic_tpl", "parts/gbase");
		$this->tpl->view("parts/ibase", $this->lang->language);
  }
  
  function grid () {
		
		$this->xml->root_name = "rows";
		$document = $this->xml->Document();

		$head = $this->xml->Element("head");
		$head->append($this->xml->Element("column", "width=5;align=center", "Id"));
		$head->append($this->xml->Element("column", "width=*", "Profile Name"));
		$head->append($this->xml->Element("column", "width=6;align=center;type=link", "Actions"));
		$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);
		
		foreach ($this->profilemdl->get() as $profile) {
			
			$cell = $this->xml->Element("row", "id=" . $profile->profile_id);
			$cell->append($this->xml->Element("cell", null, $profile->profile_id));
			$cell->append($this->xml->Element("cell", null, $profile->profile_name));
			$cell->append($this->xml->Element("cell", null, "Groups^" . $this->config->config['index_url'] . "administrator/management_reports/edit/" . $profile->profile_id));
			$document->append($cell);
			
		}		
	}

	function edit ( $profile_id ) {
		
		$profile = $this->profilemdl->getById($profile_id);
		
		$this->tpl->assign('group_list', $this->rptprofilegroupmdl->getDisponibleByProfile($profile_id));
		$this->tpl->assign("list_title", "Group List");
		$this->tpl->assign("grid_buttons", "false");
		$this->tpl->assign(array("profile_id" => $profile_id, "profile_name" => $profile->profile_name));
		
		$this->tpl->assign_include("dynamic_tpl", "administrator/management_reports/group_form");
		$this->tpl->view("parts/ibase", $this->lang->language);
		
	}

  function groupGrid ( $profile_id ) {
		
		$this->xml->root_name = "rows";
		$document = $this->xml->Document();

		$head = $this->xml->Element("head");
		$head->append($this->xml->Element("column", "width=5;align=center", "Id"));
    $head->append($this->xml->Element("column", "width=15", "column"));
		$head->append($this->xml->Element("column", "width=15", "Position"));
		$head->append($this->xml->Element("column", "width=*", "Group Name"));
		$head->append($this->xml->Element("column", "width=10;align=center;type=link", "Actions"));
		$head->append($this->xml->Element("column", "width=6;align=center;type=linkc", "#cspan"));
		$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);
		
		foreach ($this->rptprofilegroupmdl->getByProfile($profile_id) as $group) {
			
			$cell = $this->xml->Element("row", "id=" . $group->rpt_profile_group_id);
			$cell->append($this->xml->Element("cell", null, $group->rpt_profile_group_id));
      $cell->append($this->xml->Element("cell", null, $group->column));			
			$cell->append($this->xml->Element("cell", null, $group->position));			
			$cell->append($this->xml->Element("cell", null, $group->group_name));
			$cell->append($this->xml->Element("cell", null, "Reports^" . $this->config->config['index_url'] . "administrator/management_reports/editreport/" . $group->rpt_profile_group_id));
			$cell->append($this->xml->Element("cell", null, "Delete^" . $this->config->config['index_url'] . "administrator/management_reports/deletegroup/" . $profile_id . "/" . $group->rpt_profile_group_id . "^Are you sure to delete this group?"));
			$document->append($cell);
			
		}
		
	}

	function addgroup ( $profile_id ) {
		
    $rules = array ('column'	=> 'trim|required',
                  'rpt_group_id' => 'trim|required'                             
                  );
          
    $this->validation->set_rules($rules);    
    
    if ($this->validation->run() == TRUE) {  
      $group_data = array (
      'rpt_group_id'=>$this->input->post('rpt_group_id'),
      'position'=>$this->input->post('position'),      
      'column'=>$this->input->post('column')
      );
            
      if($this->rptprofilegroupmdl->insert($profile_id, $group_data)){
        $this->tpl->assign('gmessage', "The Group has been Saved successfuly.");          $this->manage_group($profile_id);
      }else{
        $this->tpl->assign('error_string', "There was an error processing your request.");
      }
    }
    
		$this->edit($profile_id);
		
	}

  function editgroup($profile_id, $rpt_profile_group_id){

    $profile = $this->profilemdl->getById($profile_id);
    $this->tpl->assign(array("profile_id" => $profile_id, "profile_name" => $profile->profile_name));
    
    //$this->tpl->assign(array("form_title" => "Edit Group"));
    $this->tpl->assign("entity_id", $profile_id);    
		$this->tpl->assign('resource_index', "edit");		
		$this->tpl->assign('resource_delete', "deletegroup");		
		$this->tpl->assign('record_id', $rpt_profile_group_id);
		$this->tpl->assign('faction', 'editgroup');
    
    $position = "";
    
    $rules = array ('column'	=> 'trim|required',
                  'rpt_group_id' => 'trim|required',
                  'position'			=> 'trim|required',                  
                  'rpt_profile_group_id'			=> 'trim|required',                  
                  );
    
          
    $this->validation->set_rules($rules);
  
    $this->tpl->assign('title', "Edit group");  
    $group_data = $this->rptprofilegroupmdl->getById($rpt_profile_group_id);
    
    $this->tpl->assign('group_list', $this->rptprofilegroupmdl->getDisponibleByProfile($profile_id, $rpt_profile_group_id));
		
    
    $this->tpl->assign("entity_id", $group_data->profile_id); 
    
    $this->assignObject($group_data);
    //$columns = $this->menu_model->get_columns_with_selected($group_data['column_id']);    
    
    //$this->tpl->assign('columns', $columns);                      
    $position = $this->rptprofilegroupmdl->get_positions_with_selected($group_data);     
    $this->tpl->assign('position', $position);                      
    
    if ($this->validation->run() == FALSE) {          
      $this->tpl->assign('position', $position);                      
      $this->tpl->assign_include("dynamic_tpl", "parts/fbase");
			$this->tpl->assign_include("dynamic_form", "administrator/management_reports/edit_profile_group");
			$this->tpl->view("parts/ibase", $this->lang->language);
    }else{
      $data = array (
      'profile_id'=>$profile_id,
      'rpt_group_id'=>$this->input->post('rpt_group_id'),
      'position'=>$this->input->post('position'),
      //'id'=>$this->input->post('id'),
      'column'=>$this->input->post('column')
      );
      
      if($this->rptprofilegroupmdl->edit_group($data,$this->input->post('rpt_profile_group_id'))){
        //$this->tpl->assign('gmessage', "Credential" . $this->lang->line('grl_upd_msg'));              
        $this->tpl->assign('gmessage', "The Group has been Updated successfuly.");                      
        $this->edit($group_data->profile_id);
      }else{
        $this->tpl->assign('error_string', "There was an error processing your request.");                      
      }
      
    }  
    
	}
  
  
  function deletegroup ( $profile_id, $rpt_profile_group_id ) {
		
		$this->rptprofilegroupmdl->delete($rpt_profile_group_id);
		$this->edit($profile_id);
		
	}
  
  function editreport ( $rpt_profile_group_id ) {
		
		$profilegroup = $this->rptprofilegroupmdl->getById($rpt_profile_group_id);
		
		$this->tpl->assign('report_list', $this->rptprofilegroupreportmdl->getDisponibleByProfieGroup($rpt_profile_group_id));
		$this->tpl->assign("list_title", "Report List");
		$this->tpl->assign("grid_buttons", "false");
		$this->tpl->assign(array("profile_id" 		=> $profilegroup->profile_id,
								 "rpt_profile_group_id" => $rpt_profile_group_id, 
								 "profile_name"     => $profilegroup->profile_name, 
								 "group_name" 		=> $profilegroup->group_name));
		
		$this->tpl->assign_include("dynamic_tpl", "administrator/management_reports/report_form");
		$this->tpl->view("parts/ibase", $this->lang->language);
		
	}

	function groupReportGrid ( $rpt_profile_group_id ) {
		
		$this->xml->root_name = "rows";
		$document = $this->xml->Document();

		$head = $this->xml->Element("head");
		$head->append($this->xml->Element("column", "width=5;align=center", "Id"));
		$head->append($this->xml->Element("column", "width=*", "Report Name"));
		$head->append($this->xml->Element("column", "width=*", "Position"));
		$head->append($this->xml->Element("column", "width=10;align=center;type=linkc", "Actions"));
		$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);
		
		foreach ($this->rptprofilegroupreportmdl->getByProfileGroup($rpt_profile_group_id) as $report) {
			
			$cell = $this->xml->Element("row", "id=" . $report->rpt_profile_group_report_id);
			$cell->append($this->xml->Element("cell", null, $report->rpt_profile_group_report_id));
			$cell->append($this->xml->Element("cell", null, $report->report_name));
			$cell->append($this->xml->Element("cell", null, $report->position));
			$cell->append($this->xml->Element("cell", null, "Delete^" . $this->config->config['index_url'] . "administrator/management_reports/deletegroupreport/" . $rpt_profile_group_id . "/" . $report->rpt_profile_group_report_id . "^Are you sure to delete this report?"));
			$document->append($cell);
			
		}
		
	}

  function editprofilereport($rpt_profile_group_id, $rpt_profile_group_report_id){ 
    $group_data = $this->rptprofilegroupmdl->getById($rpt_profile_group_id);
    //var_dump($rpt_profile_group_report_id);
    //$this->assignObject($group_data);
    
    //$profile = $this->profilemdl->getById($group_data->profile_id);        
    //$this->assignObject($profile);
    
    $this->tpl->assign("profile_name", $group_data->profile_name);  
    $this->tpl->assign("group_name", $group_data->group_name);  
    $this->tpl->assign("entity_id", $rpt_profile_group_id);  

		$this->tpl->assign('resource_index', "editreport");		
		$this->tpl->assign('resource_delete', "deletegroupreport");		
		$this->tpl->assign('rpt_profile_group_id', $group_data->rpt_profile_group_id);
		$this->tpl->assign('record_id', $rpt_profile_group_report_id);
		$this->tpl->assign('faction', 'editprofilereport');
    
    
		
    $columns = '';
  	$position = '';  		      
      
  
    //$this->tpl->assign(array("form_title" => "Edit Report"));
    $rules = array ('rpt_profile_group_id'	=> 'trim|required',
                  'rpt_report_id'			=> 'trim|required',                  
                  'position'			=> 'trim|required'
                  );
          
    $this->validation->set_rules($rules);
        
    $this->tpl->assign('title', "Edit report");  
    
    
    $this->tpl->assign('report_list', $this->rptprofilegroupreportmdl->getDisponibleByProfieGroup($rpt_profile_group_id, $rpt_profile_group_report_id));
    
    $report = $this->rptprofilegroupreportmdl->getById($rpt_profile_group_report_id);
    
    $position = $this->rptprofilegroupreportmdl->get_report_positions_with_selected($report);
    $this->assignObject($report);          
    $this->tpl->assign('position', $position);                      
  
    
    if ($this->validation->run() == FALSE) {          
      //$this->tpl->assign('columns', $columns);                            
      //$this->tpl->assign('position', $position);                      
      $this->tpl->assign_include("dynamic_tpl", "parts/fbase");
			$this->tpl->assign_include("dynamic_form", "administrator/management_reports/edit_profile_report");
			$this->tpl->view("parts/ibase", $this->lang->language);
    }else{
      
        $report_data = array (  			
  			'rpt_profile_group_id'=>$this->input->post('rpt_profile_group_id'),
  			'rpt_report_id'=>$this->input->post('rpt_report_id'),
  			'position'=>$this->input->post('position')
  			);
        
        //if($this->menu_model->edit_report($report_data,$this->input->post('id'))){
        if($this->rptprofilegroupreportmdl->edit_report($report_data,$rpt_profile_group_report_id)){
          $this->tpl->assign('gmessage', "Report" . $this->lang->line('grl_add_msg'));                   
          $this->editreport($rpt_profile_group_id);
        }else{
          $this->tpl->assign('error_string', "There was an error processing your request.");                      
        }
      
    }  
    
	}
  
  function addgroupreport ( $rpt_profile_group_id, $rpt_report_id ) {
		
		$sequence = count($this->rptprofilegroupreportmdl->getByProfileGroup($rpt_profile_group_id))+1;
		$this->rptprofilegroupreportmdl->insert($rpt_profile_group_id, $rpt_report_id, $sequence);
		$this->editreport($rpt_profile_group_id);
		
	}

  function deletegroupreport ( $rpt_profile_group_id, $rpt_profile_group_report_id ) {		
		$this->rptprofilegroupreportmdl->delete($rpt_profile_group_report_id);
		$this->editreport($rpt_profile_group_id);		
	}
  
  function manage_group ( ) {    	
		$this->tpl->assign("add_sufix", "Groups");
    
    $this->tpl->assign("resource_grid", "grid_groups");
    $this->tpl->assign("resource_edit", "edit_group");
    $this->tpl->assign("resource_add", "add_group");
    $this->tpl->assign("resource_delete", "delete_group");
    
		//$this->tpl->assign_include("filter_tpl", "administrator/management_reports/gfilter");
		$this->tpl->assign_include("dynamic_tpl", "parts/gbase");
		$this->tpl->view("parts/ibase", $this->lang->language);
		
	}

	function grid_groups ( ) {
    
		$this->xml->root_name = "rows";
		$document = $this->xml->Document();

		$head = $this->xml->Element("head");
		$head->append($this->xml->Element("column", "width=*", "Group ID"));    
		$head->append($this->xml->Element("column", "width=*", "Group Name"));
    $head->append($this->xml->Element("column", "width=*;align=left;type=linkc", "Delete"));
    //$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);

		foreach ($this->rptgroupmdl->get() as $group) {
      $cell = $this->xml->Element("row", "id=" . $group->rpt_group_id);			      
			$cell->append($this->xml->Element("cell", null, $group->rpt_group_id));						
			$cell->append($this->xml->Element("cell", null, $group->group_name));			
      $cell->append($this->xml->Element("cell", null, "Delete^" . $this->config->config['index_url'] . "administrator/management_reports/delete_group/". $group->rpt_group_id . "^Are you sure to delete this group?"));
      $document->append($cell);

		}
	}

	function add_group ( ) {
    $this->tpl->assign("resource_index", "manage_group");  
		$this->tpl->assign('faction', 'add_group');
		$this->tpl->assign('no_delete_form', true);
		
		$this->validation->set_rules(array('group_name'=>'required'));
		
		if ($this->validation->run() == FALSE) {
			
			$this->tpl->assign_include("dynamic_tpl", "parts/fbase");
			$this->tpl->assign_include("dynamic_form", "administrator/management_reports/add_group_form");
			$this->tpl->view("parts/ibase", $this->lang->language);
			
		} else {
			
			$this->assignPostData($this->rptgroupmdl);			
			$this->rptgroupmdl->insert();
			
			$this->tpl->assign('gmessage', "Group" . $this->lang->line('grl_add_msg'));
			
			$this->manage_group();
			
		}

	}
	
	function edit_group ( $rpt_group_id) {
    $this->tpl->assign("resource_index", "manage_group");      
		$this->tpl->assign('faction', 'edit_group');
		$this->tpl->assign("record_id", $rpt_group_id);
		$this->tpl->assign("resource_delete", 'delete_group');
    
		$group = $this->rptgroupmdl->getById($rpt_group_id);
		$this->assignObject($group);
		
		$this->validation->set_rules(array('rpt_group_id'=>'required', 'group_name'=>'required'));
		
		if ($this->validation->run() == FALSE) {

			$this->tpl->assign_include("dynamic_tpl", "parts/fbase");
			$this->tpl->assign_include("dynamic_form", "administrator/management_reports/edit_group_form");
			$this->tpl->view("parts/ibase", $this->lang->language);
			
		} else {
			
			$this->assignPostData($this->rptgroupmdl);
      
			$this->rptgroupmdl->update($rpt_group_id);
			
			$this->tpl->assign('gmessage', "group " . $this->lang->line('grl_upd_msg'));
			
			$this->manage_group();
			
		}

	}
	
	function delete_group ( $rpt_group_id ) {
    $report = $this->rptgroupmdl->getById($rpt_group_id);
		$this->rptgroupmdl->delete($rpt_group_id);
    $this->tpl->assign('gmessage', "Group " . $this->lang->line('grl_del_msg'));    
		$this->manage_group();				
	}
  
  function manage_report ( ) {    	
		$this->tpl->assign("add_sufix", "Reports");
    
    $this->tpl->assign("resource_grid", "grid_reports");
    $this->tpl->assign("resource_edit", "edit_report");
    $this->tpl->assign("resource_add", "add_report");
    $this->tpl->assign("resource_delete", "delete_report");
    
		//$this->tpl->assign_include("filter_tpl", "administrator/management_reports/gfilter");
		$this->tpl->assign_include("dynamic_tpl", "parts/gbase");
		$this->tpl->view("parts/ibase", $this->lang->language);
		
	}

	function grid_reports ( ) {
    
		$this->xml->root_name = "rows";
		$document = $this->xml->Document();

		$head = $this->xml->Element("head");
		$head->append($this->xml->Element("column", "width=*", "Report ID"));
		$head->append($this->xml->Element("column", "width=*", "Report Name"));
		$head->append($this->xml->Element("column", "width=*", "Report Path"));
    $head->append($this->xml->Element("column", "width=*;align=left;type=linkc", "Delete"));
    //$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);

		foreach ($this->rptreportnamemdl->get() as $report) {
      $cell = $this->xml->Element("row", "id=" . $report->rpt_report_id);			      
			$cell->append($this->xml->Element("cell", null, $report->rpt_report_id));			
			$cell->append($this->xml->Element("cell", null, $report->report_name));			
			$cell->append($this->xml->Element("cell", null, $report->report_path));			
      $cell->append($this->xml->Element("cell", null, "Delete^" . $this->config->config['index_url'] . "administrator/management_reports/delete_report/". $report->rpt_report_id . "^Are you sure to delete this report?"));
      $document->append($cell);

		}
	}

	function add_report ( ) {
    $this->tpl->assign("resource_index", "manage_report");  
		$this->tpl->assign('faction', 'add_report');
		$this->tpl->assign('no_delete_form', true);
		
		$this->validation->set_rules(array('report_name'=>'required', 'report_path'=>'required'));
		
		if ($this->validation->run() == FALSE) {
			
			$this->tpl->assign_include("dynamic_tpl", "parts/fbase");
			$this->tpl->assign_include("dynamic_form", "administrator/management_reports/add_report_form");
			$this->tpl->view("parts/ibase", $this->lang->language);
			
		} else {
			
			$this->assignPostData($this->rptreportnamemdl);			
			$this->rptreportnamemdl->insert();
			
			$this->tpl->assign('gmessage', "Report" . $this->lang->line('grl_add_msg'));
			
			$this->manage_report();
			
		}

	}
	
	function edit_report ( $rpt_report_id) {
    $this->tpl->assign("resource_index", "manage_report");      
		$this->tpl->assign('faction', 'edit_report');
		$this->tpl->assign("record_id", $rpt_report_id);
		$this->tpl->assign("resource_delete", 'delete_report');
    
		$report = $this->rptreportnamemdl->getById($rpt_report_id);
		$this->assignObject($report);
		
		$this->validation->set_rules(array('rpt_report_id'=>'required', 'report_name'=>'required', 'report_path'=>'required'));
		
		if ($this->validation->run() == FALSE) {

			$this->tpl->assign_include("dynamic_tpl", "parts/fbase");
			$this->tpl->assign_include("dynamic_form", "administrator/management_reports/edit_report_form");
			$this->tpl->view("parts/ibase", $this->lang->language);
			
		} else {
			
			$this->assignPostData($this->rptreportnamemdl);
      
			$this->rptreportnamemdl->update($rpt_report_id);
			
			$this->tpl->assign('gmessage', "report " . $this->lang->line('grl_upd_msg'));
			
			$this->manage_report();
			
		}

	}
	
	function delete_report ( $rpt_report_id ) {
    $report = $this->rptreportnamemdl->getById($rpt_report_id);
		$this->rptreportnamemdl->delete($rpt_report_id);
    $this->tpl->assign('gmessage', "Report " . $this->lang->line('grl_del_msg'));    
		$this->manage_report();				
	}

  
}

