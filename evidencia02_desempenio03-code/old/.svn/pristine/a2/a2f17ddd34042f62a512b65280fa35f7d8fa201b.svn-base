<?php

include ('admin_controller.php');

 class UserAgency extends Admin_Controller {

	function UserAgency () {
		
		parent::Admin_Controller();		
		$this->tpl->assign("resource_path", "administrator/useragency");
		
		$this->tpl->assign('type_employee_list', $this->parametermdl->getByType(6));
		$this->tpl->assign("profile_list", $this->profilemdl->get(false));
		$this->tpl->assign("discipline_list", $this->disciplinemdl->get(false));
		$this->tpl->assign("user_status_list", $this->parametermdl->getByType(21));
		
	}

	function index ( $agency_id ) {

		$agency = $this->agencymdl->getByAgencyId($agency_id);
		$back_action = "index";
		if($agency->agency_type == "A") {
			$back_action = "index";
		} else if($agency->agency_type == "C") {
			$back_action = "contractor";
		} else if($agency->agency_type == "D") {
			$back_action = "doctor";
		}
		$additional_buttons['Back'] = 'window.parent.location.href=\''.$this->config->site_url().'/administrator/agency/' . $back_action . '\'';
		$this->tpl->assign('additional_buttons', $additional_buttons);
		$this->tpl->assign(array("list_title" => "User List (" . $agency->agency_name . ")", "entity_id" => $agency_id));
		$this->tpl->assign_include("filter_tpl", "administrator/useragency/gfilter");
		$this->tpl->assign_include("dynamic_tpl", "parts/gbase");
		$this->tpl->view("parts/ibase", $this->lang->language);
	
	}	
	
	function grid ( $agency_id ) {
		
		$agency_types = $this->lang->line('agency_type_list');
		$status		  = $this->lang->line('agency_status_list');
		
		$this->xml->root_name = "rows";
		$document = $this->xml->Document();

		$head = $this->xml->Element("head");
		$head->append($this->xml->Element("column", "width=5;align=center", "Id"));
		$head->append($this->xml->Element("column", "width=19", "First Name"));
		$head->append($this->xml->Element("column", "width=19", "Last Name"));
		$head->append($this->xml->Element("column", "width=19", "Type Employee"));
		$head->append($this->xml->Element("column", "width=19", "Profile"));
		$head->append($this->xml->Element("column", "width=*", "Discipline"));
		$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);
		
		foreach ($this->usagymdl->getByAgencyId($agency_id, $this->input->post('keyword'), $this->input->post('search_type'), $this->input->post('profile_id')) as $user) {
			
			$cell = $this->xml->Element("row", "id=" . $user->us_agy_id);
			$cell->append($this->xml->Element("cell", null, $user->us_agy_id));
			$cell->append($this->xml->Element("cell", null, $user->user_first_name));
			$cell->append($this->xml->Element("cell", null, $user->user_last_name));
			$cell->append($this->xml->Element("cell", null, $user->tab_description));
			$cell->append($this->xml->Element("cell", null, $user->profile_name));
			$cell->append($this->xml->Element("cell", null, $user->description));
			$document->append($cell);
			
		}
		
	}
	
	function verif_email ( $user_email ) {
	
		$user = $this->usagymdl->getByEmailAgencyId($this->input->post('agency_id'), $user_email);
		if (count($user)) {
			$this->validation->set_message('verif_email', "The user already exist in this agency.");
			return FALSE;
		} else {
			return TRUE;
		}
	
	}
	
	function add ( $agency_id ) {
		
		$this->tpl->assign(array("entity_id" => $agency_id));
		$this->tpl->assign('faction', 'add');
		$this->tpl->assign('payment_type_list', array (
				'check' => 'Check',
				'directdepo' => 'Direct Deposit',
				'other' => 'Other'
			));
		
		$rules = array ('first_name'  	=> 'required',
						'last_name'  	=> 'required',
						'profile_id'  	=> 'required',
						'discipline_id' => 'required');
						
		if ($this->input->post('discipline_id') != 9) {
			$rules['user_email'] 	= 'required|valid_email|callback_verif_email';
			$rules['email_confirm'] = 'required|matches[user_email]';
		}
						
		$this->validation->set_rules($rules);
		
		if ($this->validation->run() == FALSE) {

			$this->tpl->assign("form_title", "Add User");
			$this->tpl->assign_include("dynamic_tpl", "parts/fbase");
			$this->tpl->assign_include("dynamic_form", "administrator/useragency/add_form");
			$this->tpl->view("parts/ibase", $this->lang->language);
			
		} else {
			
			$user = $this->usermdl->getByEmail($this->input->post('user_email'));
			if (!count($user) || $this->input->post('user_email') == '') { // user not exist: create new
	
				$this->assignPostData($this->usermdl);
				$this->usermdl->insert();
				
				$pass = passgen();
				$this->usermdl->updatePassword($this->usermdl->user_id, $pass);

			} else { // user exist: get user_id

				$this->usermdl->user_id = $user->user_id;

			}
			
			$this->assignPostData($this->usagymdl);
			$this->usagymdl->user_id = $this->usermdl->user_id;
			$this->usagymdl->insert();
			
			$this->tpl->assign('gmessage', $this->usagymdl->first_name . " " . $this->usagymdl->last_name . $this->lang->line('grl_add_msg'));
			
			$this->index($agency_id);
			
		}
		
	}
	
	function edit ( $agency_id, $us_agy_id ) {
		
		$this->tpl->assign(array("entity_id" => $agency_id));
		$this->tpl->assign('faction', 'edit');
		$this->tpl->assign('record_id', $us_agy_id);
		
		$this->tpl->assign('other_lang_list', $this->parametermdl->getByType(10));
		$this->tpl->assign('payment_type_list', array (
				'check' => 'Check',
				'directdepo' => 'Direct Deposit',
				'other' => 'Other'
			));
		
		
		$this->assignObject($this->usagymdl->getByUsAgyId($us_agy_id));
		
		$rules = array ('first_name'  	=> 'required',
						'last_name'  	=> 'required',
						'profile_id'  	=> 'required',
						'discipline_id' => 'required',
						'phone_cell' 	=> 'valid_phone',
						'fax'	  		=> 'valid_phone',
						'phone_home'	=> 'valid_phone');
						
		$this->validation->set_rules($rules);
		
		if ($this->validation->run() == FALSE) {
		
			$this->tpl->assign("form_title", "Edit User");
			$this->tpl->assign_include("dynamic_tpl", "parts/fbase");
			$this->tpl->assign_include("dynamic_form", "administrator/useragency/edit_form");
			$this->tpl->view("parts/ibase", $this->lang->language);
			
		} else {
			
			$this->assignPostData($this->usagymdl);
			$this->usagymdl->update($us_agy_id);
			
			$this->tpl->assign('gmessage', $this->usagymdl->first_name . " " . $this->usagymdl->last_name . $this->lang->line('grl_upd_msg'));
			
			$this->index($agency_id);
			
		}
		
	}
	
	function delete ( $agency_id, $us_agy_id ) {
		
		$us_agy = $this->usagymdl->getByUsAgyId($us_agy_id);
		
		$this->usagymdl->delete($us_agy_id);
		
		$this->tpl->assign('gmessage', $us_agy->first_name . " " . $us_agy->last_name . $this->lang->line('grl_del_msg'));
		$this->index($agency_id);
		
	}
	
 }
