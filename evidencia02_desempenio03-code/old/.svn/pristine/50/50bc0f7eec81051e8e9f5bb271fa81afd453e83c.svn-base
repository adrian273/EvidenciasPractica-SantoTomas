<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

require "Smarty-2.6.18/libs/Smarty.class.php";

/**
* @file system/application/libraries/Mysmarty.php
*/
class Tpl extends Smarty
{
	function Tpl()
	{
		$this->Smarty();

		$config =& get_config();
		
		// absolute path prevents "template not found" errors
		$this->template_dir = (!empty($config['smarty_template_dir']) ? $config['smarty_template_dir'] 
																	  : BASEPATH . 'application/views/');
																	
		$this->compile_dir  = (!empty($config['smarty_compile_dir']) ? $config['smarty_compile_dir'] 
																	 : BASEPATH . 'cache/'); //use CI's cache folder        
		
		if (function_exists('site_url')) {
    		// URL helper required
			$this->assign("site_url", site_url()); // so we can get the full path to CI easily
		}
		
		$this->assign("base_url",   $config["base_url"]);
		$this->assign("index_url",  $config["index_url"]);
		$this->assign("image_url",  $config["base_url"] . "style/images/");
	}
	
	/**
	* @param $resource_name string
	* @param $params array holds params that will be passed to the template
	* @desc loads the template
	*/
	function view($resource_name, $params = array(), $display = true)   {
		if (strpos($resource_name, '.') === false) {
			$resource_name .= '.tpl';
		}
		
		if (is_array($params) && count($params)) {
			foreach ($params as $key => $value) {
				$this->assign($key, $value);
			}
		}
		
		// check if the template file exists.
		if (!is_file($this->template_dir . $resource_name)) {
			show_error("template: [$resource_name] cannot be found.");
		}
		
		if ($display == true) {
			return parent::display($resource_name);
		} else {
			return parent::fetch($resource_name);
		}
		
	}
	
    function getoutput ( $resource_name, $params = array() ) {

            if (strpos($resource_name, '.') === false) {
                    $resource_name .= '.tpl';
            }
            
            if (is_array($params) && count($params)) {
                    foreach ($params as $key => $value) {
                            $this->assign($key, $value);
                    }
            }
            
            // check if the template file exists.
            if (!is_file($this->template_dir . $resource_name)) {
             	show_error("template: [$resource_name] cannot be found.");
            }
            
            return parent::fetch($resource_name);

    }

	
	function assign_include ( $include, $resource_name ) {
		
		$this->assign($include, $resource_name . ".tpl");
		
	}
} // END class smarty_library
?>