<?

include (dirname(realpath(__file__)).'/../task/visitform.php');

class DoctOrder extends VisitForm {

	var $rules = array("visit_date_time"		 => "required",
				   		"order_type_id" => "required",
				   		"visit_user_id" => "required",
				   		"do_description" => "required",
				   		"phys_user_id"	 => "required");

	
	var $fields = array("visit_date_time"	=> "Order Date",
				   		"order_type_id"		=> "Order Type",
				   		"visit_user_id"		=> "Ordered By",
				   		"do_description"	=> "Order Description",
				   		"phys_user_id"		=> "Physician Name");
	

	function DoctOrder() {
	
		parent::VisitForm();
		$this->load->model('dordermdl');
		$this->tpl->assign("resource_path", "patient/doctorder");
		$this->tpl->assign('tab_page', true);

	}

	function index ( $patient_id, $cms_485 ) {

		$this->tpl->assign("entity_id", $patient_id.'/'.$cms_485);		
//		$this->tpl->assign("no_grid_buttons", true);
		$this->tpl->assign(array("add_sufix" => "Doctor Order"));
		// $this->tpl->assign("resource_edit", 'view');
		$this->tpl->assign('additional_buttons', 
			array(
				'Print'=>'printSelected()', 
				// 'Send to Physician'=>'sendToPhysician()', 
				// 'Email to Physician'=>'emailToPhysician()',
			)
		);

		$physician_list = array();
		foreach ($this->patientdoctorofficemdl->get($patient_id, false) as $doctor_office_id => $name) {
			$doctorOfficeUsers = $this->usagymdl->getByAgencyId($doctor_office_id, null, null, 7);
			
			if (count($doctorOfficeUsers)) {
				$doctorOfficeAdmin = $doctorOfficeUsers[0];
				$physician_list[$doctorOfficeAdmin->us_agy_id] = $name;				
			}
		}
		$this->tpl->assign('physician_list',  $physician_list);

		$this->tpl->assign_include("filter_tpl", "patient/doctorder/do_gfilter");
		$this->tpl->assign_include("dynamic_tpl", "parts/gbase");
		$this->tpl->view("parts/ibase", $this->lang->language);

	}
	
	function grid ( $patient_id ) {

		$this->xml->root_name = "rows";
		$document = $this->xml->Document();

		$head = $this->xml->Element("head");
        $head->append($this->xml->Element("column", "width=3;type=ch", " "));
        $head->append($this->xml->Element("column", "width=10", "Order Date"));
        $head->append($this->xml->Element("column", "width=20", "Order Type"));
        $head->append($this->xml->Element("column", "width=*", "Order Description"));
        $head->append($this->xml->Element("column", "width=12", "Ordered By"));        
        $head->append($this->xml->Element("column", "width=12", "Doctor Name"));        
        $head->append($this->xml->Element("column", "width=15", "Status"));        
        // $head->append($this->xml->Element("column", "width=15;align=center;type=link", "Actiones"));
        // $head->append($this->xml->Element("column", "width=8;align=center;type=link", "#cspan"));
        $head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
        $document->append($head);

        foreach($this->visitlogmdl->get_doctororder_bypatient($patient_id) as $task) {

            $cell = $this->xml->Element("row", "id=" . $task->visit_log_id);
            $cell->append($this->xml->Element("cell", null, "0"));
            $cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($task->visit_date_time, 'USA_DATE')) ));
            // $cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($task->visit_date_time, 'USA_DATE')) ));
            // $cell->append($this->xml->Element("cell", null, $task->visit_description));
            $cell->append($this->xml->Element("cell", null, $task->doc_doctor_order_type_description));
            $cell->append($this->xml->Element("cell", null, $task->do_description));
            $cell->append($this->xml->Element("cell", null, $task->visit_user_first_name . " " . $task->visit_user_last_name));
            $cell->append($this->xml->Element("cell", null, $task->doctor_name));
            $cell->append($this->xml->Element("cell", null, $task->tab_description));
                                    
            $document->append($cell);
             
        }


/*		$head = $this->xml->Element("head");

		$head->append($this->xml->Element("column", "width=10;align=center", "Order Date"));
		$head->append($this->xml->Element("column", "width=*", "Order Type"));
		$head->append($this->xml->Element("column", "width=*", "Ordered By"));
		$head->append($this->xml->Element("column", "width=*", "Patient Name"));
		$head->append($this->xml->Element("column", "width=*", "Physician"));
		$head->append($this->xml->Element("column", "width=*", "Status"));
		$head->append($this->xml->Element("column", "width=10;align=center", "Status Date"));
		$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);

		foreach($data = $this->docdoctorordermdl->getByPatient($patient_id) as $order) {

			$patient   = $this->patientmdl->getById($order->patient_id);
			$doctor_office = $this->agencymdl->getByAgencyId($order->doctor_office_id);
			$order_by  = $this->usagymdl->getByUsAgyId($order->order_by_user_id);

			$cell = $this->xml->Element("row", "id=" . $order->doc_doctor_order_id);
			$cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($order->order_date))));
			$cell->append($this->xml->Element("cell", null, $order->doc_doctor_order_type_description));
			$cell->append($this->xml->Element("cell", null, @$order_by->first_name . " " . @$order_by->last_name));
			$cell->append($this->xml->Element("cell", null, $patient->first_name . " " . $patient->last_name));
			$cell->append($this->xml->Element("cell", null, @$doctor_office->agency_name));
			$cell->append($this->xml->Element("cell", null, $order->tab_description));
			if ($order->tab_023_order_status == 2) {
				$cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($order->sent_date))));
			} else if ($order->tab_023_order_status == 3) {
				$cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($order->signed_date))));
			} else if ($order->tab_023_order_status == 4) {
				$cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($order->rejected_date))));
			}
			$document->append($cell);
		}*/

	}

	function setDoctorOrderStatus () {
		
		$this->doctorordermdl->tab_023_order_status = 1;
		
		if (!is_null($this->doctorordermdl->sent_date)) {
			$this->doctorordermdl->tab_023_order_status = 2;
		}
		
		if (!is_null($this->doctorordermdl->signed_date)) {
			$this->doctorordermdl->tab_023_order_status = 3;
		}
		
		if (!is_null($this->doctorordermdl->received_date)) {
			$this->doctorordermdl->tab_023_order_status = 4;
		}
		
	}

	function edit ( $patient_id, $cms_485, $visit_log_id, $window='self' ) { 
		$task_return =  "patient/doctorder/index/" . $patient_id . "/" . $cms_485;  	
        
        // This Visit is not yet Due
        $this->load->helper('url');
    
        $config =& get_config();
        $visit_log = $this->visitlogmdl->getById($visit_log_id);        
        $visit_type = $this->visittypemdl->getById($visit_log->visit_type_id);
        
        if ($visit_type->visit_program == null) {
      
            $this->load->model('oasis_model');
            if(isset($_POST['submit']))
            {
                $oasis = $this->oasis_model->getOasisData($visit_log_id);
                if(empty($oasis)){
                    unset($_POST['submit']);
                  
                    foreach($_POST as $key=>$val){    
                        if(strrpos($key, "_DT")!==false){
                          if(!is_null($val) AND strlen($val)>0 AND strpos($val,"-")!==FALSE){                              
                            list($M,$D,$Y) = explode("-",$val);
                            if($Y AND $M AND $D)
                            $_POST[$key] = $Y."-".$M."-".$D;              
                          }
                        }
                    }
                  
                    $_POST['visit_log_id'] = $visit_log_id;
                    $this->oasis_model->insertData($_POST);
                }else{
                    unset($_POST['submit']);
                    foreach($_POST as $key=>$val){    
                        if(strrpos($key, "_DT")!==false){
                          if(!is_null($val) AND strlen($val)>0 AND strpos($val,"-")!==FALSE){                              
                            list($M,$D,$Y) = explode("-",$val);
                            if($Y AND $M AND $D)
                            $_POST[$key] = $Y."-".$M."-".$D;              
                          }
                        }
                    }
                    if(!isset($_POST['M0102_PHYSN_ORDRD_SOCROC_DT_NA']))
                    $_POST['M0102_PHYSN_ORDRD_SOCROC_DT_NA'] = '';
                  
                    $_POST['visit_log_id'] = $visit_log_id;
                    $this->oasis_model->updateData($_POST, $visit_log_id);
                }
                            
                //$task_return = $this->session->userdata('task_return');               
                //header("Location: " . $this->config->config["index_url"] . $this->session->userdata('task_return'));
                //echo $this->config->config["index_url"].$task_return;exit;
                header("Location: " . $this->config->config["index_url"] . $this->session->userdata('task_return'));
                return;
            }else{
                //$task_return = $this->session->userdata('task_return');               
                //echo $this->config->config["index_url"].$task_return;exit;
                $oasis = $this->oasis_model->getOasisData($visit_log_id);
                if(sizeof($oasis)>0){
                  $oasis = $oasis[0];
                  foreach($oasis as $key=>$val){    
                    if(strrpos($key, "_DT")!==false){
                      if(!is_null($val) AND strlen($val)>0 AND strpos($val,"-")!==FALSE){                              
                        list($Y,$M,$D) = explode("-",$val);
                        if($Y AND $M AND $D)
                        $oasis[$key] = $M."-".$D."-".$Y;              
                      }
                    }
                  }
                }
                
                $data['oasis'] = $oasis;
                
                $data['visit_log_id'] = $visit_log_id;
                $data['cancel_url'] = $this->config->config["index_url"] . $this->session->userdata('task_return');
                $this->load->view('task/documents/oasis_c_form',$data); 

                //$this->tpl->assign_include("dynamic_tpl", "mail/comnotes/compose_form");
                //$this->tpl->view("parts/ibase", $this->lang->language);
            
                    //echo "Visit Type Form not implemented...";
                    return false;
            }
        }
        
        if ($this->app->validateVisit($visit_log_id) == false) {        
            if($window=='nw'){
                $this->tpl->assign('continue_url', $config["index_url"] . "task/" . $visit_type->visit_program . "/index/" . $visit_log_id."/task/nw" );        
                $this->tpl->assign('cancel_action', 'window.close();window.opener.loadGrid();' );        
            }
            else{
                $this->tpl->assign('continue_url', $config["index_url"] . "task/" . $visit_type->visit_program . "/index/" . $visit_log_id );                
                $this->tpl->assign('cancel_action', 'history.go(-1);' );        
            }
      
            $this->tpl->assign('popupmessage', "Therapy Schedule not complying with 13th and 19th visit rules. Please review and correct." );                
            $this->tpl->assign('popuptitle', "Warning" );                
            $this->tpl->assign_include("dynamic_tpl", "task/documents/pre_opendocument");
            $this->tpl->view("parts/ibase", $this->lang->language);      
            return false;
        }
    
    	$this->session->set_userdata('task_return', $task_return );

        if($window=='nw'){
          header("Location: " . $config["index_url"] . "task/" . $visit_type->visit_program . "/index/" . $visit_log_id."/task/nw");
        }
        else{
          header("Location: " . $config["index_url"] . "task/" . $visit_type->visit_program . "/index/" . $visit_log_id);
        }
            
    }
    

/*	function view ( $patient_id, $doc_doctor_order_id ) {
		
		$doctor_order = $this->docdoctorordermdl->getById($doc_doctor_order_id);
		
		$this->session->set_userdata('doctororder_return', "patient/doctororder/index/" . $doctor_order->patient_id);
		
		redirect('doctororder/front/edit/' . $doc_doctor_order_id);
		
	}
*/	
	function add ( $patient_id, $cms_485 ) {
		
		$this->tpl->assign("faction", "add/" . $patient_id."/".$cms_485);
		$this->tpl->assign("default_date", date('m-d-Y'));
		$this->tpl->assign('cancel_action', 'patient/doctorder/index/' . $patient_id."/".$cms_485);
		
		$physician_list = array();
		foreach ($this->patientdoctorofficemdl->get($patient_id, false) as $doctor_office_id => $name) {
			$doctorOfficeUsers = $this->usagymdl->getByAgencyId($doctor_office_id, null, null, 7);
			
			if (count($doctorOfficeUsers)) {
				$doctorOfficeAdmin = $doctorOfficeUsers[0];
				$physician_list[$doctorOfficeAdmin->us_agy_id] = $name;				
			}
		}
		

		$this->validation->set_rules($this->rules);
		$this->validation->set_fields($this->fields);

		if ($this->validation->run() == FALSE) {					
			// "Order By" always should come from login user
			$this->assignObject($this->usermdl->getById($this->getUserId()));
			$this->tpl->assign('us_agy_id', 	  $this->getUsAgyId());				

			// Default Physician to select from Plan of care
			// filter by profile ID 7 ( Doctor Office )
			$episode = $this->episodemdl->getById($cms_485);
			$doctorOfficeUsers = $this->usagymdl->getByAgencyId($episode->doctor_office_id, null, null, 7);
			if (count($doctorOfficeUsers)) {
				$doctorOfficeAdmin = $doctorOfficeUsers[0];
				$this->tpl->assign('phys_user_id',  $doctorOfficeAdmin->us_agy_id);
			}

			/*
			var msec = Date.parse("March 21, 2012");
			var d = new Date(msec);
			// https://blog.udemy.com/javascript-date-comparison/

			var rightnow = new Date();
			 var startdate = new Date(2015,06,01);
			 var enddate = new Date(2015,06,21);
			 if (rightnow>=startdate && rightnow<=enddate){
				// valid date
			 } else {
				outside the episode period
			 }
			*/

			$this->tpl->assign('episode_start_date',  $episode->episode_start_date);
			$this->tpl->assign('episode_end_date',  $episode->episode_end_date);
			$this->tpl->assign('physician_list',  $physician_list);
			$this->tpl->assign('cms485_id',  $cms_485);
			$this->tpl->assign('patient',  $this->patientmdl->getById($patient_id));
			$this->tpl->assign('order_type_list', $this->docdoctorordertypemdl->getAdd());
			$this->tpl->assign('time', strtotime(date("H-m-d 09:00:00")));

			$this->tpl->assign("form_title", "Add Doctor Order");
			$this->tpl->assign_include("dynamic_tpl", "patient/doctorder/fbase");
			$this->tpl->assign_include("dynamic_form", "patient/doctorder/form");
			$this->tpl->view("parts/ibase", $this->lang->language);
		} else {
			$patient_id = null;
    		$cms485 = $this->cms485mdl->getById($this->input->post('cms485_id'));
    		if(count($cms485) > 0){
    			$soc = $this->socmdl->getById($cms485->soc_id);
    			if(count($soc) > 0){
    				$patient_id = $soc->patient_id;
    			}
    		}
    		$this->assignPostData($this->visitlogmdl);

    		$visit_date_time_hour = ((int) ($this->input->post('visit_time_Hour') == 12 ? 0 : $this->input->post('visit_time_Hour')) + ($this->input->post('visit_time_Meridian') == 'am' ? 0 : 12));
    		
			$this->visitlogmdl->visit_date_time = standard_date(human_to_unix($this->input->post('visit_date_time')), 'MYSQL_NOTIME') . " " . $visit_date_time_hour . ":" . $this->input->post('visit_time_Minute');
	
			$this->visitlogmdl->visit_asigned_by = $this->getUsAgyId();
			// $visittype = $this->visittypemdl->getById($this->input->post('visit_type_id'));
			$visittype = $this->visittypemdl->getById(200);
			$this->visitlogmdl->insert('N');
			$visit_log_id = $this->visitlogmdl->visit_log_id;
			$this->visitlogmdl->updateFlex($visit_log_id, 'co_billing_deleted', 1 );
			$this->app->updateEpisodeVisitNumber($this->visitlogmdl->cms485_id); // reordering visit number
			$visitlog = $this->visitlogmdl->getById($visit_log_id);
			$episode = $this->episodemdl->getById($visitlog->cms485_id);			

			if (!$this->teammdl->exitInTeam($episode->patient_id, $this->input->post('visit_user_id'))) {
				$this->teammdl->user_id = $this->input->post('visit_user_id');
				$this->teammdl->assigned_by_user_id = $this->getUsAgyId();
				$this->teammdl->insert($episode->patient_id);

				// sending internal message
				/*if(!isset($patient )){
					$patient = $this->patientmdl->getById($episode->patient_id);    
				}  
				@$assigned_by = $this->usagymdl->getByUsAgyId($this->teammdl->assigned_by_user_id);
				$ppr = $this->teammdl->getByPPRId($this->teammdl->ppr_id);
				$notification_subject = "New Patient: " . $patient->first_name . " " . $patient->last_name .  ", " .
				        "Assigned by: " . @$assigned_by->complete_name . ", " .
				        "Assigned Date/Time: " . standard_date(mysql_to_unix($ppr->assigned_date), 'USA_DATE_TIME');

				$msg_text = @$assigned_by->complete_name . " assigned a new patient to you. Patient name: " . $patient->first_name . " " . $patient->last_name . ". Assigned Date/Time: " . standard_date(mysql_to_unix($ppr->assigned_date), 'USA_DATE_TIME');


				$this->messagemdl->user_from = $this->getUsAgyId();
				$this->messagemdl->msg_subject = $notification_subject;
				$this->messagemdl->msg_text = $msg_text;
				$this->messagemdl->insert();

				$this->usermessagemdl->insert($this->messagemdl->msg_id, $this->teammdl->user_id, 0);

				// sending personal email
				$user = $this->usagymdl->getByUsAgyId($this->teammdl->user_id);
						
				$this->load->library('email');
				$this->email->from('noreply@homehealthsoft.com', 'HHS Notification');
				$this->email->to($user->user_email); 
				$this->email->subject($notification_subject);
				$this->email->message($msg_text);	
				$this->email->send();   */     

			}			

			$this->assignPostData($this->dordermdl);

			if (count($this->dordermdl->get($visitlog->visit_log_id))) {				
				$this->dordermdl->update($visitlog->visit_log_id);
				if ($this->input->post('phys_user_id') !== FALSE) {					
					$this->visitlogmdl->updateFlex($visitlog->visit_log_id, 'phys_user_id', $this->input->post('phys_user_id') );

					$doctor_office_user = $this->usagymdl->getByUsAgyId($this->input->post('phys_user_id'));					
					$this->visitlogmdl->updateFlex($visitlog->visit_log_id, 'doctor_office_id', $doctor_office_user->agency_id );

				}
			} else {
				// $this->dordermdl->provider_sign_date = standard_date(now(), 'MYSQL');
				$this->dordermdl->insert($visitlog->visit_log_id);
				if ($this->input->post('phys_user_id') !== FALSE) {					
					$this->visitlogmdl->updateFlex($visitlog->visit_log_id, 'phys_user_id', $this->input->post('phys_user_id') );
					$doctor_office_user = $this->usagymdl->getByUsAgyId($this->input->post('phys_user_id'));					
					$this->visitlogmdl->updateFlex($visitlog->visit_log_id, 'doctor_office_id', $doctor_office_user->agency_id );
				}
			}


			// check is submit for approval clicked?
			if ($this->input->post('visit_status_id') == 3) {
				$this->visitlogmdl->updateFlex($visit_log_id, 'sent_to_approve_date', standard_date(now(), 'MYSQL'));
				$this->updateFormEdition($visit_log_id);
			}
			redirect('patient/doctorder/index/' . $patient_id ."/". $visitlog->cms485_id);
		}
		
	}

	
    function pdf(){
        if (!is_null($this->input->post('record_ids'))) {

            //var_dump($this->input->post('record_ids'));exit;
            $record_ids = $this->input->post('record_ids');
            $recods = explode(",", $record_ids);

            $filenames = array();
            $this->load->helper('visit_pdf');
            foreach ($recods as $visit_log_id) {

                $visit_log = $this->visitlogmdl->getById($visit_log_id);
                $visit_type = $this->visittypemdl->getById($visit_log->visit_type_id);

                if ($visit_type->visit_program == null) {
                    continue;
                }
                $method = $visit_type->visit_program.'_pdf';

                if(!function_exists($method)){          
                    continue;
                }

                $this->load->model($visit_type->visit_program.'mdl');

                if(!isset($filenames[$visit_log_id])){
                    $filenames[$visit_log_id] = $method($visit_log_id);
                }
                //break;
                //$this->config->config['index_url']."task/".$prtqueue->visit_program."/pdf/".$prtqueue->visit_log_id;
            }
      
      
			/** 
			* New Code support >= PHP 5.3.0
			*/
			require_once(APPPATH.'third_party/itbz/fpdf/FPDF.php');          
			require_once(APPPATH.'third_party/itbz/fpdi/FPDI.php');          
			require_once(APPPATH.'third_party/Jurosh/PDFMerge/PDFMerger.php');          
			// and we can do stuff
			$pdf = new \Jurosh\PDFMerge\PDFMerger;

            foreach($filenames as $name){
                $pdf->addPDF($name, 'all');
            }                  
            $pdf->merge('download', 'all.pdf');
            // End of code for PHP >= 5.3.0

            foreach($filenames as $name){
                @unlink($name);
            } 

        }
    }

    function sendto_physician(){
        if (!is_null($this->input->post('record_ids'))) {
            //$this->load->library('Wick');

            //var_dump($this->input->post('record_ids'));exit;
            $record_ids = $this->input->post('record_ids');
            $recods = explode(",", $record_ids);

            $filenames = array();
            $this->load->helper('visit_pdf');
            foreach ($recods as $visit_log_id) {
                $this->visitlogmdl->updateFlex($visit_log_id, 'tab_023_doctor_order_status', 2);   
                // setting date sent to physician
                $this->visitlogmdl->updateFlex($visit_log_id, 'sent_to_physician_date', standard_date(now(), 'MYSQL'));                              
            }
        }

        header("Location: " . $this->config->config["index_url"] . 'agencydoctororder/ready');
        return;
    }

    function emailto_physician(){
        if (!is_null($this->input->post('record_ids'))) {
            //var_dump($this->input->post('record_ids'));exit;
            $record_ids = $this->input->post('record_ids');
            $recods = explode(",", $record_ids);

            $filenames = array();
            $this->load->helper('visit_pdf');
            $this->load->library('email');

            foreach ($recods as $visit_log_id) {

                $visit_log = $this->visitlogmdl->getById($visit_log_id);
                $visit_type = $this->visittypemdl->getById($visit_log->visit_type_id);

                if ($visit_type->visit_program == null) {
                    continue;
                }
                $method = $visit_type->visit_program.'_pdf';

                if(!function_exists($method)){          
                    continue;
                }

                $this->load->model($visit_type->visit_program.'mdl');

                if(!isset($filenames[$visit_log_id])){
                    $filenames[$visit_log_id] = $method($visit_log_id);
                }
                

                $doctor_order = $this->dordermdl->get($visit_log_id);
                $patient  = $this->patientmdl->getById($visit_log->patient_id);
                $doctorid = $visit_log->phys_user_id;
                if (is_null($doctorid)) {
                    $cms485 = $this->episodemdl->getById($visit_log->cms485_id);
                    $doctorid = $cms485->phys_user_id;  
                }
                if ($this->input->post('phys_user_id') != $doctorid) {
                	// doctor does not match so skip sending
                	continue;
                }

                $doctor = $this->usagymdl->getByUsAgyId($doctorid);
                
                if ($doctor->email AND $this->email->valid_email($doctor->email)) {                    
                    $subject = "Patient ".$patient->first_name." ".$patient->last_name." DOCTOR ORDER Order Date " . standard_date(mysql_to_unix($visit_log->visit_date_time));
                    
                    $this->email->from('noreply@homehealthsoft.com', 'HHS Notification');
                    $this->email->to($doctor->email);                       
                    $this->email->subject($subject);

                    $body = '** This is a no-reply email ** - Please respond through the HHS application internal email system if necessary<br><br>'.'<b>Order Description: </b>'.@$doctor_order->do_description;
	              	$this->email->set_mailtype("html"); 

                    $this->email->message($body);   
                    $this->email->attach($filenames[$visit_log_id]);
                    
                    $this->email->send();
                    //$this->email->print_debugger();
                    $this->email->clear(TRUE);

                    // Update Status as Sent to Pahysician
                    $this->visitlogmdl->updateFlex($visit_log_id, 'tab_023_doctor_order_status', 2);
                    // setting date sent to physician
	                $this->visitlogmdl->updateFlex($visit_log_id, 'sent_to_physician_date', standard_date(now(), 'MYSQL'));                              
	                $this->visitlogmdl->updateFlex($visit_log_id, 'tab105_delivery_sent_via', 2); 
                }

                //break;                
            }
      

            /*$this->load->library('fpdf');
            require_once(APPPATH.'third_party/PDFMerger/PDFMerger.php');          
            $pdf = new PDFMerger;
            foreach($filenames as $name){
                $pdf->addPDF($name, 'all');
            }      
            //print_r($filenames);


            $pdf->merge('download', 'all.pdf');*/

            foreach($filenames as $name){
                @unlink($name);
            } 

        }

        header("Location: " . $this->config->config["index_url"] . 'agencydoctororder/ready');
        return;
    }


}
