<?

 class Companyreferrals extends MY_Controller {

	var $rules 			= array ('user_id' => 'required');
	var $fields 		= array ('user_id' => 'Clinician/User');
	/**
	 * Contractor Info
	 * @var Array
	 */
	private $contractor;

	function Companyreferrals () {
		
		parent::MY_Controller();
		$this->tpl->assign("resource_path", "patient/companyreferrals");
		$this->tpl->assign(array("tab_page" => true, "tab_page" => true));
		
		$this->validation->set_fields($this->fields);
		
	}

	function index ($active_tab = "referrals") {
		$this->tpl->assign('active_tab',   $active_tab);
		
		$this->tpl->assign_include("dynamic_tpl", "patient/companyreferrals_tbase");
		$this->tpl->view("parts/ibase", $this->lang->language);
	}

	function referrals ( ) {
		$date = new DateTime();
		$date->modify('-30 day');
		$this->tpl->assign('referral_date_time_from', $date->format('Y-m-d'));

    	$this->tpl->assign("resource_grid", ($this->getAgencyType() == 'C' ) ? 'grid' : ($this->getAgencyType() == 'A' ?'gridAgency' : 'notfound'));
	    $this->tpl->assign("resource_edit", 'edit');    
	    //$this->tpl->assign("resource_add", "referral_add");
	    //$this->tpl->assign("resource_delete", "referral_delete");
	    // if($this->getAgencyType() == 'A')
	    $this->tpl->assign("items_per_page", 300);
	    
	    $this->tpl->assign(array("no_grid_buttons" => true));
	    $this->tpl->assign('additional_buttons', array('Export to Excel'=>'grid.toExcel(\''.$this->config->config['base_url'].'export/generate.php\');'));
	    
	    if($this->getAgencyType() == 'A')
	    $this->tpl->assign_include("filter_tpl", "patient/agency_therapy_referral_gfilter");
	    else
	    $this->tpl->assign_include("filter_tpl", "patient/company_referral_gfilter");
		$this->tpl->assign_include("dynamic_tpl", "patient/company_referral_gbase");
		$this->tpl->view("parts/ibase", $this->lang->language);
	
	}	
	
	function grid ( ) {		
		
    	$contractor_id = $this->getAgencyId();
    	// LOAD MODELS
		$this->load->model('soccontractormdl');
    
    	$this->xml->root_name = "rows";
		$document = $this->xml->Document();
		$head = $this->xml->Element("head");
		$head->append($this->xml->Element("column", "width=15", "Agency Referral Date / Time"));	
		// $head->append($this->xml->Element("column", "width=*", "Created on Date/Time"));		
	    $head->append($this->xml->Element("column", "width=*", "Patient Name"));
	    // $head->append($this->xml->Element("column", "width=3;type=img;align=center", "PT"));
	    // $head->append($this->xml->Element("column", "width=3;type=img;align=center", "OT"));
	    // $head->append($this->xml->Element("column", "width=3;type=img;align=center", "ST"));
	    $head->append($this->xml->Element("column", "width=6;align=center", "Disciplines"));
    	/* $head->append($this->xml->Element("column", "width=*", "Primary Physician"));
		$head->append($this->xml->Element("column", "width=*", "Referral Notes"));
		$head->append($this->xml->Element("column", "width=*", "Diagnosis Information")); */
		$head->append($this->xml->Element("column", "width=*", "Referred by"));
		$head->append($this->xml->Element("column", "width=6;type=ro", "Comments"));
		$head->append($this->xml->Element("column", "width=10;type=ro", "Referral Status"));
		$head->append($this->xml->Element("column", "width=6;type=ro", "Response"));
		$head->append($this->xml->Element("column", "width=*", "Agency Name"));
		
    	//$head->append($this->xml->Element("column", "width=10;align=center;type=link", "Actions"));		
    	$head->append($this->xml->Element("column", "width=5;align=center;type=link", "#cspan"));
    
		$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);
		
		//if ($this->input->post('agency_type') == 'A')
			$data = $this->soccontractormdl->getByContractorId(null, $contractor_id, "agency_referral_date", "desc" );
		/*else
			$data = $this->agencymdl->getByParent($this->getAgencyId());*/
		
		$ref_contractor=$this->agencymdl->getByAgencyId($contractor_id);

		foreach ($data as $ref) {
			/*$ref_contractor_id = $this->agencycontractormdl->getContractorId($ref->agency_contractor_id);
			$ref_contractor=$this->agencymdl->getByAgencyId($ref_contractor_id);*/

			if($this->input->post('keyword') != ""){
				if (stripos($ref->pat_first_name.' '.$ref->pat_last_name, $this->input->post('keyword')) === FALSE
					AND stripos($ref->referred_by, $this->input->post('keyword')) === FALSE
					AND stripos($ref->agency_name, $this->input->post('keyword')) === FALSE
					AND stripos($ref->referral_status, $this->input->post('keyword')) === FALSE
				)
				{

					continue;					
				}
			}
      		//print_r($ref);exit;
      		$comments = $ref->contractor_notes;
			$comments = str_replace("\n","<br>",$comments );
			$comments = str_replace("\r","",$comments );
			$comments = str_replace("'","\\'",$comments );
			$commentsCellStr = '<![CDATA[';
			if($comments!="")
			$commentsCellStr.= '<a href="javascript://" onclick="(isIE()?event:arguments[0]).cancelBubble = true; Tip(\''.$comments.'\', OFFSETY, 18);"><img src="'.$this->config->config["base_url"].'style/images/icon_note.jpg" border="0" /></a>&nbsp;';
			$commentsCellStr .= ']]>';  

			$statusNotes = $ref->status_notes;
			$statusNotes = str_replace("\n","<br>",$statusNotes );
			$statusNotes = str_replace("\r","",$statusNotes );
			$statusNotes = str_replace("'","\\'",$statusNotes );
			$statusNotesCellStr = '<![CDATA[';
			if($statusNotes!="")
			$statusNotesCellStr.= '<a href="javascript://" onclick="(isIE()?event:arguments[0]).cancelBubble = true; Tip(\''.$statusNotes.'\', OFFSETY, 18);"><img src="'.$this->config->config["base_url"].'style/images/icon_note.jpg" border="0" /></a>&nbsp;';
			$statusNotesCellStr .= ']]>';  

			$cell = $this->xml->Element("row", "id=" . $ref->soc_contractor_id);
			$cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($ref->agency_referral_date.$ref->agency_referral_time), 'USA_DATE_TIME')));
			// $cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($ref->referral_date_time), 'USA_DATE_TIME')));
			$cell->append($this->xml->Element("cell", null, $ref->pat_first_name.' '.$ref->pat_last_name));
			//<img src="'.$this->config->config["base_url"].'style/images/exclamation.gif" border="0" />     
			$disciplines_selected = array();
			if ($ref_contractor->provides_altern_therapy == "Y") {
				if (@$ref->dis_aqu==1){
				  $disciplines_selected[] = 'AQ';
				}
				if (@$ref->dis_beh==1){
				  $disciplines_selected[] = 'BE';
				}
				if (@$ref->dis_mas==1){
				  $disciplines_selected[] = 'MA';
				}
				if (@$ref->dis_mus==1){
				  $disciplines_selected[] = 'MU';
				}
				if (@$ref->dis_rec==1){
				  $disciplines_selected[] = 'RE';
				}
				if (@$ref->dis_hbr==1){
				  $disciplines_selected[] = 'THBR';
				}
				if (@$ref->dis_art==1){
				  $disciplines_selected[] = 'ART';
				}
			} else{
				if (@$ref->dis_sn==1){
				  $disciplines_selected[] = 'SN';
				}
				if (@$ref->dis_pt==1){
				  $disciplines_selected[] = 'PT';
				}
				if (@$ref->dis_ot==1){
				  $disciplines_selected[] = 'OT';
				}
				if (@$ref->dis_st==1){
				  $disciplines_selected[] = 'ST';
				}
				if (@$ref->dis_msgw==1){
				  $disciplines_selected[] = 'MSGW';
				}
			}

			$cell->append($this->xml->Element("cell", null, implode("; ", $disciplines_selected)));

			/*if($ref->dis_pt!="")
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/check.gif'));
			else
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/no_img.gif'));

			if($ref->dis_ot!="")
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/check.gif'));
			else
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/no_img.gif'));

			if($ref->dis_st!="")
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/check.gif'));
			else
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/no_img.gif'));*/
      
      		if ($ref->referral_status == 'Returned' OR $ref->referral_status == 'Cancelled') {
      			$ref->referral_status = '<![CDATA[<font color="red">'.strtoupper($ref->referral_status).'</font>]]>';
      		} else {
      			$ref->referral_status = strtoupper($ref->referral_status);
      		}
			/* $cell->append($this->xml->Element("cell", null, $ref->prim_doctor_name));
			$cell->append($this->xml->Element("cell", null, $ref->referral_notes));
			$cell->append($this->xml->Element("cell", null, $ref->diagnosis_info)); */
			$cell->append($this->xml->Element("cell", null, $ref->referred_by));
			$cell->append($this->xml->Element("cell", null, $commentsCellStr));
			$cell->append($this->xml->Element("cell", null, $ref->referral_status));
			$cell->append($this->xml->Element("cell", null, $statusNotesCellStr));
			$cell->append($this->xml->Element("cell", null, $ref->agency_name));
			/*if($ref->agency_status=='SA'){
				$cell->append($this->xml->Element("cell", null, "Save and Print^" . $this->config->config['index_url'] . "patient/contractor/referral_pdf/" . $ref->soc_contractor_id));
			}
			else
				$cell->append($this->xml->Element("cell", null, null));*/
		
			$document->append($cell);
			
		}
    
	}

  	function gridAgency ( ) {		
		
    	$agency_id = $this->getAgencyId();
    	// LOAD MODELS
		$this->load->model('soccontractormdl');
    
    	$this->xml->root_name = "rows";
		$document = $this->xml->Document();
		$head = $this->xml->Element("head");
		$head->append($this->xml->Element("column", "width=*", "Referral Date / Time"));		
	    $head->append($this->xml->Element("column", "width=*", "Patient Name"));
    	// $head->append($this->xml->Element("column", "width=3;type=img;align=center", "PT"));
    	// $head->append($this->xml->Element("column", "width=3;type=img;align=center", "OT"));
    	// $head->append($this->xml->Element("column", "width=3;type=img;align=center", "ST"));
    	$head->append($this->xml->Element("column", "width=*;align=center", "Disciplines"));
		$head->append($this->xml->Element("column", "width=5;type=ro", "Note"));
    	/* $head->append($this->xml->Element("column", "width=*", "Primary Physician"));
		$head->append($this->xml->Element("column", "width=*", "Diagnosis Information")); */
		$head->append($this->xml->Element("column", "width=*", "Referred by"));
		$head->append($this->xml->Element("column", "width=12", "Referral Status"));
		$head->append($this->xml->Element("column", "width=10;type=ro", "Status Notes"));
		$head->append($this->xml->Element("column", "width=*", "Company Name"));
		
    	//$head->append($this->xml->Element("column", "width=10;align=center;type=link", "Actions"));		
    	$head->append($this->xml->Element("column", "width=5;align=center;type=link", "#cspan"));
    
		$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);
		
		//if ($this->input->post('agency_type') == 'A')
			$data = $this->soccontractormdl->getByAgencyId(null, $agency_id, "referral_date_time", "desc" );
		/*else
			$data = $this->agencymdl->getByParent($this->getAgencyId());*/
		
		foreach ($data as $ref) {	
			$ref_contractor_id = $this->agencycontractormdl->getContractorId($ref->agency_contractor_id);
			$ref_contractor=$this->agencymdl->getByAgencyId($ref_contractor_id);

			if($this->input->post('keyword') != ""){
				if (stripos($ref->pat_first_name.' '.$ref->pat_last_name, $this->input->post('keyword')) === FALSE
					AND stripos($ref->referred_by, $this->input->post('keyword')) === FALSE
					AND stripos($ref->agency_name, $this->input->post('keyword')) === FALSE
					AND stripos($ref->referral_status, $this->input->post('keyword')) === FALSE
				)
				{

					continue;					
				}
			}
					
      		//print_r($ref);exit;
			$comments = $ref->referral_notes;
			$comments = str_replace("\n","<br>",$comments );
			$comments = str_replace("\r","",$comments );
			$comments = str_replace("'","\\'",$comments );
			$commentsCellStr = '<![CDATA[';
			if($comments!="")
			$commentsCellStr.= '<a href="javascript://" onclick="(isIE()?event:arguments[0]).cancelBubble = true; Tip(\''.$comments.'\', OFFSETY, 18);"><img src="'.$this->config->config["base_url"].'style/images/icon_note.jpg" border="0" /></a>&nbsp;';
			$commentsCellStr .= ']]>'; 

			$statusNotes = $ref->status_notes;
			$statusNotes = str_replace("\n","<br>",$statusNotes );
			$statusNotes = str_replace("\r","",$statusNotes );
			$statusNotes = str_replace("'","\\'",$statusNotes );
			$statusNotesCellStr = '<![CDATA[';
			if($statusNotes!="")
			$statusNotesCellStr.= '<a href="javascript://" onclick="(isIE()?event:arguments[0]).cancelBubble = true; Tip(\''.$statusNotes.'\', OFFSETY, 18);"><img src="'.$this->config->config["base_url"].'style/images/icon_note.jpg" border="0" /></a>&nbsp;';
			$statusNotesCellStr .= ']]>';  

			$cell = $this->xml->Element("row", "id=" . $ref->soc_contractor_id);
  			$cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($ref->referral_date_time), 'USA_DATE_TIME')));
			$cell->append($this->xml->Element("cell", null, $ref->pat_first_name.' '.$ref->pat_last_name));

			$disciplines_selected = array();
			if ($ref_contractor->provides_altern_therapy == "Y") {
				if (@$ref->dis_aqu==1){
				  $disciplines_selected[] = 'AQ';
				}
				if (@$ref->dis_beh==1){
				  $disciplines_selected[] = 'BE';
				}
				if (@$ref->dis_mas==1){
				  $disciplines_selected[] = 'MA';
				}
				if (@$ref->dis_mus==1){
				  $disciplines_selected[] = 'MU';
				}
				if (@$ref->dis_rec==1){
				  $disciplines_selected[] = 'RE';
				}
				if (@$ref->dis_hbr==1){
				  $disciplines_selected[] = 'THBR';
				}
				if (@$ref->dis_art==1){
				  $disciplines_selected[] = 'ART';
				}
			} else{
				if (@$ref->dis_sn==1){
				  $disciplines_selected[] = 'SN';
				}
				if (@$ref->dis_pt==1){
				  $disciplines_selected[] = 'PT';
				}
				if (@$ref->dis_ot==1){
				  $disciplines_selected[] = 'OT';
				}
				if (@$ref->dis_st==1){
				  $disciplines_selected[] = 'ST';
				}
				if (@$ref->dis_msgw==1){
				  $disciplines_selected[] = 'MSGW';
				}
			}

			$cell->append($this->xml->Element("cell", null, implode("; ", $disciplines_selected)));
			/*
      		//<img src="'.$this->config->config["base_url"].'style/images/exclamation.gif" border="0" />      
  			if($ref->dis_pt!="")
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/check.gif'));
  			else
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/no_img.gif'));
      
  			if($ref->dis_ot!="")
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/check.gif'));
  			else
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/no_img.gif'));
      
	      	if($ref->dis_st!="")
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/check.gif'));
	      	else
				$cell->append($this->xml->Element("cell", null, $this->config->config["base_url"].'style/images/no_img.gif'));*/
      
			/* $cell->append($this->xml->Element("cell", null, $ref->prim_doctor_name));			
			$cell->append($this->xml->Element("cell", null, $ref->diagnosis_info)); */
			$cell->append($this->xml->Element("cell", null, $commentsCellStr));
      		$cell->append($this->xml->Element("cell", null, $ref->referred_by));
      		$cell->append($this->xml->Element("cell", null, $ref->referral_status));
      		$cell->append($this->xml->Element("cell", null, $statusNotesCellStr));
      		$cell->append($this->xml->Element("cell", null, $ref->agency_name));
      		/*if($ref->agency_status=='SA'){
        	$cell->append($this->xml->Element("cell", null, "Save and Print^" . $this->config->config['index_url'] . "patient/contractor/referral_pdf/" . $ref->soc_contractor_id));
      		}
      		else
			$cell->append($this->xml->Element("cell", null, null));*/
			
			$document->append($cell);
			
		}
    
	}

	function referrals_by_agency(){
		$this->tpl->assign("resource_grid", "referrals_by_agency_grid");
	    $this->tpl->assign("noedit", TRUE);    
	    $this->tpl->assign("items_per_page", 300);
	    
	    $this->tpl->assign(array("no_grid_buttons" => true));

	    $this->tpl->assign('additional_buttons', array('Export to Excel'=>'grid.toExcel(\''.$this->config->config['base_url'].'export/generate.php\');'));
		$this->tpl->assign("referrals_by_agency_filter", TRUE);
		$this->tpl->assign_include("filter_tpl", "patient/company_referral_gfilter");
	    $this->tpl->assign_include("dynamic_tpl", "parts/gbase");
		$this->tpl->view("parts/ibase", $this->lang->language);
	}

	function referrals_by_agency_grid(){
		$this->load->model('soccontractormdl');

		$months = array();
		$this_month = new datetime(date("Y-m-01"));
		
		$contractor_id = $this->getAgencyId();

		$this->xml->root_name = "rows";
		$document = $this->xml->Document();
		$head = $this->xml->Element("head");
		$head->append($this->xml->Element("column", "width=15", "Agency Name"));		
    	$head->append($this->xml->Element("column", "width=*", $this_month->format("M / Y")));

		$months[] = $this_month->format("Y-m");
		for ($i=1; $i <=12 ; $i++) { 
			// echo $this_month->modify("-1 month")->format("M/Y")."<br>";
	    	$head->append($this->xml->Element("column", "width=*", $this_month->modify("-1 month")->format("M / Y")));
			$months[] = $this_month->format("Y-m");
		}

		$head->append($this->xml->Element("column", "width=5;align=center;type=link", "#cspan"));
    
		$head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
		$document->append($head);

		$agencies = $this->agencycontractormdl->getByContractor($this->getAgencyId());

		foreach ($agencies as $agency) {
			$cell = $this->xml->Element("row", "id=" . $agency->agency_id);

			$cell->append($this->xml->Element("cell", null, $agency->agency_name));

			foreach ($months as $month) {
				$count = $this->soccontractormdl->getCountByContractorAgency($contractor_id, $agency->agency_id, $month);
				$cell->append($this->xml->Element("cell", null, $count));
			}	

			$document->append($cell);
		}

	}

	function edit($soc_contractor_id){
	    //echo "{$patient_id}, {$episode_id}, {$soc_contractor_id}";
	    //$contractor_id = $this->getAgencyId();
	    // LOAD MODELS
		$this->load->model('soccontractormdl');
		$this->load->model('soccontractorhistorymdl');
		$this->load->model('agencycontractormdl');
		$this->load->model('uploaddocumentsmdl');

		$contractorsoc = $this->soccontractormdl->getById($soc_contractor_id);
		$soc = $this->socmdl->getById($contractorsoc->soc_id);
		$episode = $this->episodemdl->getCurrent($soc->soc_id);

	  	$this->tpl->assign('soc_id', $contractorsoc->soc_id);
	  	$this->tpl->assign('episode_start_date', @$episode->episode_start_date);
	  	$this->tpl->assign('episode_end_date', @$episode->episode_end_date);
	  	
		$patient_id = $soc->patient_id;
		$haveDocuments = count($this->uploaddocumentsmdl->get($patient_id)) > 0 ? true : false;
		$this->tpl->assign('haveDocuments', $haveDocuments);
		$this->tpl->assign('entity_id', $soc_contractor_id);
		$contractor_name = $this->agencycontractormdl->getContractorNameById($contractorsoc->agency_contractor_id);
		$contractor_id = $this->agencycontractormdl->getContractorId($contractorsoc->agency_contractor_id);
		
		$this->contractor = $this->agencymdl->getByAgencyId($contractor_id);
		$this->tpl->assign('contractor', $this->contractor);

	    $this->tpl->assign('contractor_name', $contractor_name);

	    // insert into soc_contractor_referral_history table if the data is not exist here but exists in soc_contractor_referral table
		if($this->soccontractorhistorymdl->getHistoriesCount($soc_contractor_id) == 0 ){
			$this->soccontractorhistorymdl->insert($soc_contractor_id, $contractorsoc);
		}

		//$this->tpl->assign('record_id', $patient_id."/".$contractor_id."/".$episode_id);
		//$this->tpl->assign('episode_id', $episode_id);
		$this->tpl->assign('referral_date_display_only', true);
		$this->tpl->assign('referral_date_time_display_only', true);
		$this->tpl->assign('faction', 'edit');
		$this->tpl->assign('form_title', 'Therapy Referral');

		$additional_buttons['Print Referral'] = "location.href='{$this->config->config['index_url']}patient/contractor/referral_pdf/{$soc_contractor_id}/';";
		
		

		$patient = $this->patientmdl->getById($patient_id);
		$this->tpl->assign('patient_name', $patient->first_name . " " . $patient->last_name);
		$agency = $this->agencymdl->getByAgencyId($patient->agency_id);

		$this->tpl->assign('physician_list', $this->usagymdl->getPhysiciansByAgency($patient->agency_id));
		$this->tpl->assign('not_physician_list', $this->usagymdl->getNotPhysiciansByAgency($patient->agency_id));    
		$this->tpl->assign('clinician_list', $this->usagymdl->getCliniciansByAgency($patient->agency_id));
		$this->tpl->assign('referral_name_list', $this->usagymdl->getReferralNameByAgency($patient->agency_id));		



	    /*if (!is_null($episode_id) && $episode_id != '') {
	      $episode = $this->episodemdl->getById($episode_id);
	      $soc = $this->socmdl->getById(@$episode->soc_id);
	    } else {
	      $soc = $this->socmdl->getCurrent($patient_id);
	    }*/
	    
    
    	//$soccontractor = $this->soccontractormdl->getById(@$episode->soc_id);
    
    	$this->assignObject($contractorsoc);
    
		$this->tpl->assign('referral_date', standard_date(mysql_to_unix($contractorsoc->referral_date_time))); // referral datetime convertion
		$this->tpl->assign('referral_time', standard_date(mysql_to_unix($contractorsoc->referral_date_time), 'USA_TIME')); // referral datetime convertion
		
		$this->tpl->assign('referral_status_list', array (
			'Pending' => 'Pending',
			'Accepted' => 'Accepted',
			'Accepted Partially' => 'Accepted Partially',
			'Returned' => 'Returned',
			'Cancelled' => 'Cancelled',
		));

		if($agency->agency_status == 'SA' AND $this->getAgencyType() == 'C'){
	    	$this->tpl->assign("can_edit_status", true);	    		      
		}else if ($this->getAgencyType() == 'C') {
	    	$this->tpl->assign("can_edit_status", true);	    		      
			$this->tpl->assign('doctor_office_list', $this->agencydoctorofficemdl->get($patient->agency_id, null, false));

			// $this->tpl->assign('prim_doctor_office', $this->agencymdl->getByAgencyId($contractorsoc->prim_doctor_office_id));
			// $this->tpl->assign('second_doctor_office', $this->agencymdl->getByAgencyId($contractorsoc->second_doctor_office_id));

  			//$this->tpl->assign("prim_doctor", 	$this->usagymdl->getByUsAgyId($soc->prim_doctor_user_id));
  			//$this->tpl->assign("second_doctor", $this->usagymdl->getByUsAgyId($soc->second_doctor_user_id));
			$this->tpl->assign("doctor_display", true);
		} else if($contractorsoc->referral_status != "Cancelled") {
			$this->tpl->assign("can_cancel_send", true);
			$additional_buttons['Delete Therapy Referral'] = "deleteReferral({$soc_contractor_id});";
			    		      
		}

		if ($this->getUserProfileId()==3){
			$this->tpl->assign("edit_contractor_notes", true);  			
		}

		$this->tpl->assign('prim_doctor_office', $this->agencymdl->getByAgencyId($contractorsoc->prim_doctor_office_id));
		$this->tpl->assign('second_doctor_office', $this->agencymdl->getByAgencyId($contractorsoc->second_doctor_office_id));
		
		// $this->tpl->assign('prim_doctor_user_id', $patient->prim_doctor_user_id);
		// $this->tpl->assign('second_doctor_user_id', $patient->second_doctor_user_id);

	    // counting episode of the soc
		//if (count($this->episodemdl->getBySocId($soc->soc_id)) && $patient->tab_013_status > 2 && $this->getAgencyType() != 'C') {
		if (count($this->episodemdl->getBySocId($contractorsoc->soc_id)) && $patient->tab_013_status > 2 && ($this->getAgencyType() != 'C' || ($agency->agency_status == 'SA' AND $this->getAgencyType() == 'C') )) {
			$this->tpl->assign('new_referral_enable', true);
		}

		if($agency->agency_status == 'SA' AND $this->getAgencyType() == 'C'){

		}else{
			if ($this->getAgencyType() == 'C') {
				$this->tpl->assign('lock_soc', 1);
			}

			// if (!$this->hasPermission(2)) {
			if ($this->getUserProfileId()==1 || ($agency->agency_status == 'SA' AND $this->getUserProfileId()==3)) {
				// Have permission to change the SOC date
	  			$this->tpl->assign('change_soc_date', true);
			}
			
		}

		$rules = array ('referral_date' => 'required',
			'prim_diagnosis' => 'required',
			'agency_contractor_id' => 'required',
			'soc_id' => 'required',
			'referral_time' => 'valid_time',
			 //'prim_doctor_user_id' => 'required',
			 'referral_status' => 'required|callback_checkStatus['.$agency->agency_status.','.$contractorsoc->referral_status.']',
			'prim_doctor_office_id' => 'required'
			);
		$fields = array ('referral_date' => 'Referral Date',
			'prim_diagnosis' => 'Primary Diagnosis',
			'agency_contractor_id' => 'Contractor',
			'soc_id' => 'SOC',
			'referral_time' => 'Referral Time',
			'referral_status' => 'Referral Status',
			//'prim_doctor_user_id' => 'Primary Physician',
			'prim_doctor_office_id' => 'Referring Physician'
			);

		$agency_type = $this->agencymdl->getByAgencyId($this->getAgencyId())->agency_type;


		if (count($this->episodemdl->getCurrentByPatientId($patient_id)) && (is_null($contractorsoc->lock_soc) || $contractorsoc->lock_soc == 0)) { // checking soc date greater than last episode
			@$rules['estimated_soc_date'] .= 'callback_checkSOCDate';
		}
		

		if($this->input->post('has_insu_medicare')==1){      
			$rules['insu_medicare_hic_number'] = 'required';
			$fields['insu_medicare_hic_number'] = 'HIC Number';
		}
		if($this->input->post('has_insu_medicaid')==1){
	       /*array('field' => 'insu_medicaid_id',
	             'label' => 'Medicaid Id',
	             'rules' => 'required')*/
			$fields['insu_medicaid_id'] = 'Medicaid Id';
			$rules['insu_medicaid_id'] = 'required';

			$fields['insu_medicaid_auth_from_date'] = 'Medicaid Authorization From date';
			$rules['insu_medicaid_auth_from_date'] = 'required';

			$fields['insu_medicaid_auth_to_date'] = 'Medicaid Authorization To date';
			$rules['insu_medicaid_auth_to_date'] = 'required';
		}

		if($this->input->post('has_insu_other')==1){
			$fields['insu_other_id'] = 'Other Id';
			$rules['insu_other_id'] = 'required';

			$fields['insu_other_auth_from_date'] = 'Other Authorization From Date';
			$rules['insu_other_auth_from_date'] = 'required';

			$fields['insu_other_auth_to_date'] = 'Other Authorization To Date';
			$rules['insu_other_auth_to_date'] = 'required';
		}

		if( in_array($this->input->post('referral_status'), array('Accepted Partially','Returned','Cancelled')) ){      
			$rules['status_notes'] = 'required';
			$fields['status_notes'] = 'Therapy Referral Response';
		}

    	//print_r($rules);exit;
		$this->validation->set_rules($rules);
		$this->validation->set_fields($fields);

		if ($this->validation->run() == TRUE) {
			$this->assignPostData($this->soccontractormdl);
			/*$referral_time_hour = ((int) ($this->input->post('referral_time_Hour') == 12 ? 0 : $this->input->post('referral_time_Hour')) + ($this->input->post('referral_time_Meridian') == 'am' ? 0 : 12));
			$visit_date_time = standard_date(human_to_unix($this->input->post('referral_date')), 'MYSQL_NOTIME') . " " . $referral_time_hour . ":" . $this->input->post('referral_time_Minute');

			// Fixing of date format from example 2015-08-10 1:20 to 2015-08-10 01:20
			$visit_date_time = date("Y-m-d H:i",strtotime($visit_date_time));*/
			$visit_date_time = date("Y-m-d H:i", now());

			$this->soccontractormdl->referral_date_time  = $visit_date_time;
			if (!$this->isValidDate($this->soccontractormdl->referral_date_time)) {
				$this->soccontractormdl->referral_date_time = $soc->referral_date_time;
			}
			$this->soccontractormdl->current_soc = 1;
			$this->soccontractormdl->referral_status = "Pending";
			$this->soccontractormdl->create_user_id = $contractorsoc->create_user_id;
			$this->soccontractormdl->modify_user_id = $this->getUsAgyId();
			// $this->soccontractormdl->prim_doctor_user_id = $soc->prim_doctor_user_id;
			// $this->soccontractormdl->second_doctor_user_id = $soc->second_doctor_user_id;
			$agency_referral_hour = ((int) ($this->input->post('hour') == 12 ? 0 : $this->input->post('hour')) + ($this->input->post('meridian') == 'am' ? 0 : 12));

      $agency_referral_time = $agency_referral_hour . ":" . $this->input->post('minute');
        
      $this->soccontractormdl->agency_referral_time = $agency_referral_time;
			$this->soccontractormdl->update($soc_contractor_id);

			//$this->patientmdl->updateDoctorOffice($patient_id, $this->input->post('prim_doctor_office_id'), $this->input->post('second_doctor_office_id'));

			// fetch latest Therapy Referral info
			$newContractorsoc = (array)$this->soccontractormdl->getById($soc_contractor_id);
			unset($newContractorsoc['modify_user_id']);
			unset($newContractorsoc['modify_datetime']);
			$prevContractorSoc = (array)$contractorsoc;
			unset($prevContractorSoc['modify_user_id']);
			unset($prevContractorSoc['modify_datetime']);
			
			// check is there any changes saved, If changes detect save the record
			$result = array_diff_assoc($newContractorsoc, $prevContractorSoc);
			if (!empty($result)) {			
				$this->assignPostData($this->soccontractorhistorymdl);
				$this->soccontractorhistorymdl->referral_date_time = $this->soccontractormdl->referral_date_time;
				
				$this->soccontractorhistorymdl->current_soc = 1;
				$this->soccontractorhistorymdl->create_user_id = $this->soccontractormdl->create_user_id;
				$this->soccontractorhistorymdl->modify_user_id = $this->soccontractormdl->modify_user_id;
				$this->soccontractorhistorymdl->insert($soc_contractor_id);			
			}

			$this->tpl->assign('success_string', "Therapy Referral" . $this->lang->line('grl_upd_msg'));
			//redirect('patient/companyreferrals');
			/*$this->contractor_referral($patient_id,$episode_id);
			exit;      */
			header("Location: " . $this->config->config["index_url"] . "patient/companyreferrals/referrals");
		}
		
		$this->tpl->assign('doctor_office_list', $this->agencydoctorofficemdl->get($patient->agency_id, null, false));
		
		if ($contractorsoc->lock_soc == 1) {
			$this->tpl->assign('case_manager', $this->usagymdl->getByUsAgyId($contractorsoc->case_manager_user_id));
			$this->tpl->assign('clinician',    $this->usagymdl->getByUsAgyId($contractorsoc->clinician_user_id));
			//$this->tpl->assign('additional_buttons', array('Print Contractor Referral'=>'selectContractor();'));
		}
		
		$this->tpl->assign('referral_time_ut', mysql_to_unix($contractorsoc->referral_date_time));
		$this->tpl->assign('referral_time_only', standard_date(mysql_to_unix($contractorsoc->referral_date_time), 'USA_TIME_C'));
		$this->tpl->assign('referral_time_Hour', date("h",mysql_to_unix($contractorsoc->referral_date_time)));
		$this->tpl->assign('referral_time_Minute', date("i",mysql_to_unix($contractorsoc->referral_date_time)));
		$this->tpl->assign('referral_time_Meridian', date("a",mysql_to_unix($contractorsoc->referral_date_time)));
		$this->tpl->assign("tab_page", true);

		if ( $this->getUserProfileId()==1 || ($agency->agency_status == 'SA' AND $this->getUserProfileId()==3) ) {
			// can edit/save
		}else{
	  		$this->tpl->assign('no_commit_form', true);
		}
		
		/*if($agency->agency_status == 'SA' AND $this->getAgencyType() == 'C'){
	      // allow to edit the patuent info
		}else{
			$this->tpl->assign('no_commit_form', !$this->hasPatientAccess($patient_id) || $this->getAgencyType() == 'C'); 
			if (!$this->hasPatientAccess($patient_id) && (!$this->hasPermission(4) || !$this->hasPermission(5))) $this->tpl->assign('no_commit_form', true);
		}*/
				
		// $this->lang->language['grl_save'] = 'Send Electronic Referral';

		if(@$patient->tab_014_living_arr){
			$tab_014_living_arr = $this->parametermdl->get(14,@$patient->tab_014_living_arr);
			$tab_014_living_arr = $tab_014_living_arr->tab_description;
			$this->tpl->assign("patient_living_arr", $tab_014_living_arr);		
		}
		$this->tpl->assign("patient_caregiver_name", @$patient->caregiver_name);		
		$this->tpl->assign("patient_caregiver_phone", @$patient->caregiver_phone);		

		$additional_buttons['Cancel'] = 'history.go(-1)';		
		$this->tpl->assign('additional_buttons', $additional_buttons);

		$this->tpl->assign('hours_list', array(
			'00'=> '00','01'=>'01', '02'=>'02', '03'=>'03', '04'=>'04', '05'=>'05', '06'=>'06', 
			'07'=>'07', '08'=>'08', '09'=>'09', '10'=>'10', '11'=>'11', '12'=>'12'
	));
	$this->tpl->assign('minutes_list', array(
			'00'=>'00', '05'=>'05', '10'=>'10', '15'=>'15', '20'=>'20', '25'=>'25', '30'=>'30',
			'35'=>'35', '40'=>'40', '45'=>'45', '50'=> '50', '55'=>'55'
	));
		$this->tpl->assign('type_time', array('am'=>'AM','pm'=>'PM'));

		// agency_referral_time
		$this->tpl->assign('agency_referral_hr', date("h",mysql_to_unix($contractorsoc->agency_referral_date.$contractorsoc->agency_referral_time)));
		$this->tpl->assign('agency_referral_min', date("i",mysql_to_unix($contractorsoc->agency_referral_date.$contractorsoc->agency_referral_time)));
		$this->tpl->assign('agency_referral_mer', date("a",mysql_to_unix($contractorsoc->agency_referral_date.$contractorsoc->agency_referral_time)));

	
		$this->tpl->assign_include("dynamic_tpl", "patient/team/referral_base");
		$this->tpl->assign_include("dynamic_form", "patient/team/referral_form");
		$this->tpl->view("parts/ibase", $this->lang->language);

	}
	
	function edit_referral_status($soc_contractor_id){
		if(!$soc_contractor_id){
	      echo "<SCRIPT>parent.dhxWins.unload()</SCRIPT>";exit;
	    }


	    $this->load->model('soccontractormdl');
		$this->load->model('soccontractorhistorymdl');

	    $contractorsoc = $this->soccontractormdl->getById($soc_contractor_id);
	    $soc = $this->socmdl->getById($contractorsoc->soc_id);
	    $patient_id = $soc->patient_id;
	    $patient = $this->patientmdl->getById($patient_id);
	    $agency = $this->agencymdl->getByAgencyId($patient->agency_id);
	    if ( $this->getUserProfileId()==1 || ($agency->agency_status == 'SA' AND $this->getUserProfileId()==3) ) {
	    	// Can edit 
	    } else if ($contractorsoc->referral_status != "Pending") {
	    	// Agency can't change status unless it have status "Pending"
	    	echo "<font color='red'>You can't change status!</font>";
	    	echo "<SCRIPT>setTimeout('parent.dhxWins.unload()', 1500);</SCRIPT>";exit;
	    } 

		
	    $this->tpl->assign("soc_contractor_id", $soc_contractor_id);

		$rules['referral_status'] = 'required|callback_checkStatus['.$agency->agency_status.','.$contractorsoc->referral_status.']';
		$fields['referral_status'] = 'Status';

	    if( in_array($this->input->post('referral_status'), array('Accepted Partially','Returned','Cancelled')) ){      
			$rules['status_notes'] = 'required';
			$fields['status_notes'] = 'Therapy Referral Response';
		}

		$this->validation->set_rules($rules);
		$this->validation->set_fields($fields);
    	
    	

	    if ($this->validation->run() == FALSE) {
	    	$this->tpl->assign('referral_status_list', array (
				'Pending' => 'Pending',
				'Accepted' => 'Accepted',
				'Accepted Partially' => 'Accepted Partially',
				'Returned' => 'Returned',
				'Cancelled' => 'Cancelled',
			));

			$this->assignObject($contractorsoc);
      	    $this->tpl->assign_include("dynamic_tpl", "patient/team/edit_referral_status");			  
			$this->tpl->view("parts/ibase", $this->lang->language);
		} else {
			$this->soccontractormdl->updateFlex($soc_contractor_id, 'referral_status', $this->input->post('referral_status'));
			$this->soccontractormdl->updateFlex($soc_contractor_id, 'status_notes', $this->input->post('status_notes'));
			$this->soccontractormdl->updateFlex($soc_contractor_id, 'modify_user_id', $this->getUsAgyId());

			// fetch latest Therapy Referral info
			$newContractorsoc = (array)$this->soccontractormdl->getById($soc_contractor_id);
			unset($newContractorsoc['modify_user_id']);
			unset($newContractorsoc['modify_datetime']);
			$prevContractorSoc = (array)$contractorsoc;
			unset($prevContractorSoc['modify_user_id']);
			unset($prevContractorSoc['modify_datetime']);
			
			// check is there any changes saved, If changes detect save the record
			$result = array_diff_assoc($newContractorsoc, $prevContractorSoc);
			if (!empty($result)) {			
				$this->assignPostData($this->soccontractorhistorymdl, $newContractorsoc);
				$this->soccontractorhistorymdl->insert($soc_contractor_id);			
			}


			echo "<SCRIPT>parent.location.reload(true);parent.dhxWins.unload()</SCRIPT>";
		}
	}

	function checkSOCDate ( $estimated_soc_date ) {
		
		$soc = $this->socmdl->getById($this->input->post('soc_id'));
		$last_episode = $this->episodemdl->getCurrentByPatientId($soc->patient_id);
		if (mysql_to_unix($last_episode->estimated_soc_date) >= human_to_unix($estimated_soc_date)) {
			$this->validation->set_message('checkSOCDate', "The estimaded SOC Date must be greater than " . standard_date(mysql_to_unix($last_episode->estimated_soc_date)));
			return FALSE;
		} else {
			return TRUE;
		}
		
	}

	function checkStatus ( $referral_status, $params ) {
		list($agency_status, $current_status) = explode(",", $params);
		if ($current_status != $referral_status AND $referral_status == 'Cancelled') {
			/*if ( $this->getUserProfileId()==1 || ($agency_status == 'SA' AND $this->getUserProfileId()==3) ) {
		    	$this->validation->set_message('checkStatus', 'You can\'t change status to "Cancelled"!');
				return false;
		    }*/
			if ($this->getAgencyType() != 'A') {
				$this->validation->set_message('checkStatus', 'You can\'t change status to "Cancelled"!');
				return false;
			}
		}

		return true;		
	}

	function doctorInfo($doctorID){
		$doctorInfo = $this->agencymdl->getByAgencyId($doctorID);

		echo "<label class='doct-address'>{$doctorInfo->address}</label><br>".
	        ( ( @$doctorInfo->address2 != "" ) ? @$doctorInfo->address2."<br>" : "").
	        "{$doctorInfo->city}, {$doctorInfo->state_name_short}. {$doctorInfo->zip}<br>".
	        "Phone: <label class='doct-phone'>{$doctorInfo->phone_primary}</label><br>".
	        "Fax: <label class='doct-fax'>{$doctorInfo->fax}</label><br>";
	}

	function delete_referral($soc_contractor_id){
		$this->load->model('soccontractormdl');
		$this->load->model('soccontractorhistorymdl');
		$contractorsoc = $this->soccontractormdl->getById($soc_contractor_id);
		$this->soccontractormdl->updateFlex($soc_contractor_id, 'referral_status', 'Cancelled');
		$this->soccontractormdl->updateFlex($soc_contractor_id, 'modify_user_id', $this->getUsAgyId());

		// fetch latest Therapy Referral info
		$newContractorsoc = (array)$this->soccontractormdl->getById($soc_contractor_id);
		unset($newContractorsoc['modify_user_id']);
		unset($newContractorsoc['modify_datetime']);
		$prevContractorSoc = (array)$contractorsoc;
		unset($prevContractorSoc['modify_user_id']);
		unset($prevContractorSoc['modify_datetime']);
		
		// check is there any changes saved, If changes detect save the record
		$result = array_diff_assoc($newContractorsoc, $prevContractorSoc);
		if (!empty($result)) {			
			$this->assignPostData($this->soccontractorhistorymdl, $newContractorsoc);
			$this->soccontractorhistorymdl->insert($soc_contractor_id);			
		}

		echo "1"; exit;
	}
	
    
 }
