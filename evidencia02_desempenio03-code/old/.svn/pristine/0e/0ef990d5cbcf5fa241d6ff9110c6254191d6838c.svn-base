<?
include (dirname(realpath(__file__)).'/../task/visitform.php');

class Manageorder extends VisitForm {
	function Manageorder () {
		parent::VisitForm();
		$this->tpl->assign("resource_path", "doctorder/manageorder");
		$this->tpl->assign(array("tab_page" => true));
        $this->load->model('dordermdl');
	}
	function tabs () {
        $this->tpl->assign("tab_page", true);
		$this->tpl->assign_include("dynamic_tpl", "doctorder/manageorder/tbase");
		$this->tpl->view("parts/ibase");
	}
	
	function index () {
		$this->tpl->assign(array("no_grid_buttons" => true));
		
        $this->tpl->assign('additional_buttons', 
            array(
                'Print'=>'printSelected()',  
				'Email Doctor Order'=>'email_invoice_confirm()',               
            )
        );
        $this->tpl->assign('agency', $this->agencymdl->getByAgencyId( $this->getAgencyId() ) );
        $this->tpl->assign('visit_status_list', $this->parametermdl->getByType(83));
        // default To date filter is Today
        $this->tpl->assign('visit_date_fin', date("m-d-Y"));
        // default From date filter is 90 days before
        $this->tpl->assign('visit_date_ini', date("m-d-Y", mktime(0,0,0,date("m"),date("d")-90,date("Y"))));
        
		
		$this->tpl->assign_include("filter_tpl", "doctorder/manageorder/gfilter");
		$this->tpl->assign_include("dynamic_tpl", "doctorder/manageorder/gbase");
		$this->tpl->view("parts/ibase");
	}
	function grid(){
		$agency_id = $this->getAgencyId();    
        $agency = $this->agencymdl->getByAgencyId($agency_id);    

		$this->xml->root_name = "rows";
		$document = $this->xml->Document();

		$head = $this->xml->Element("head");
        $head->append($this->xml->Element("column", "width=3;type=ch", " "));
        $head->append($this->xml->Element("column", "width=15", "Order Date"));
        $head->append($this->xml->Element("column", "width=20", "Order Type"));
        $head->append($this->xml->Element("column", "width=*", "Patient Name"));
        $head->append($this->xml->Element("column", "width=*", "Ordered By"));   
        if ($agency->agency_type=='A') {
        	$head->append($this->xml->Element("column", "width=*", "Contractor"));
        }else{
        	$head->append($this->xml->Element("column", "width=*", "Agency Name"));
        }
        $head->append($this->xml->Element("column", "width=*", "Order Status"));        
        // $head->append($this->xml->Element("column", "width=15;align=center;type=link", "Actiones"));
        // $head->append($this->xml->Element("column", "width=8;align=center;type=link", "#cspan"));
        $head->append($this->xml->Element("settings", null, $this->xml->Element("colwidth", null, "%")));
        $document->append($head);
        
        $data = array();
        if ($agency->agency_type == "A") {
            $us_agy_permission = $this->usagypermissionmdl->getByUsAgyId($this->getUsAgyId(), null, false);
            if ($this->getUserProfileId() == 1 || in_array(4, $us_agy_permission) == TRUE) {
                $data = $this->visitlogmdl->get_all_doctororders($agency_id, null, "A");
            } else {
                $data = $this->visitlogmdl->get_all_doctororders($agency_id, $this->getUsAgyId(), "A");
            }
        }else{
            if ($this->getUserProfileId() == 3) {
                $data = $this->visitlogmdl->get_all_doctororders($agency_id, null, "C", null, 'no');
            }else{
                $data = $this->visitlogmdl->get_all_doctororders($agency_id, $this->getUsAgyId(), "C", null, 'no');
            }
        }
        foreach($data as $task) {
            $cell = $this->xml->Element("row", "id=" . $task->visit_log_id);
            $cell->append($this->xml->Element("cell", null, "0"));
            $cell->append($this->xml->Element("cell", null, standard_date(mysql_to_unix($task->visit_date_time, 'USA_DATE')) ));
            $cell->append($this->xml->Element("cell", null, $task->doc_doctor_order_type_description));
            $cell->append($this->xml->Element("cell", null, $task->first_name . " " . $task->last_name));
            $cell->append($this->xml->Element("cell", null, $task->visit_user_first_name . " " . $task->visit_user_last_name));
	        if ($agency->agency_type=='A') {
	        	$C = $this->agencymdl->getByAgencyId($task->contractor_id); 
    	        $cell->append($this->xml->Element("cell", null, $C->agency_name));
	        }else{
	        	$A = $this->agencymdl->getByAgencyId($task->agency_id); 
    	        $cell->append($this->xml->Element("cell", null, $A->agency_name));
	        }
            $cell->append($this->xml->Element("cell", null, $task->tab_description));
                                    
            $document->append($cell);
             
        }
	}

    function edit ( $visit_log_id, $window='self' ) { 
        $task_return =  "doctorder/manageorder";      
        
        // This Visit is not yet Due
        $this->load->helper('url');
    
        $config =& get_config();
        $visit_log = $this->visitlogmdl->getById($visit_log_id);        
        $visit_type = $this->visittypemdl->getById($visit_log->visit_type_id);
        
        if ($visit_type->visit_program == null) {
      
            $this->load->model('oasis_model');
            if(isset($_POST['submit']))
            {
                $oasis = $this->oasis_model->getOasisData($visit_log_id);
                if(empty($oasis)){
                    unset($_POST['submit']);
                  
                    foreach($_POST as $key=>$val){    
                        if(strrpos($key, "_DT")!==false){
                          if(!is_null($val) AND strlen($val)>0 AND strpos($val,"-")!==FALSE){                              
                            list($M,$D,$Y) = explode("-",$val);
                            if($Y AND $M AND $D)
                            $_POST[$key] = $Y."-".$M."-".$D;              
                          }
                        }
                    }
                  
                    $_POST['visit_log_id'] = $visit_log_id;
                    $this->oasis_model->insertData($_POST);
                }else{
                    unset($_POST['submit']);
                    foreach($_POST as $key=>$val){    
                        if(strrpos($key, "_DT")!==false){
                          if(!is_null($val) AND strlen($val)>0 AND strpos($val,"-")!==FALSE){                              
                            list($M,$D,$Y) = explode("-",$val);
                            if($Y AND $M AND $D)
                            $_POST[$key] = $Y."-".$M."-".$D;              
                          }
                        }
                    }
                    if(!isset($_POST['M0102_PHYSN_ORDRD_SOCROC_DT_NA']))
                    $_POST['M0102_PHYSN_ORDRD_SOCROC_DT_NA'] = '';
                  
                    $_POST['visit_log_id'] = $visit_log_id;
                    $this->oasis_model->updateData($_POST, $visit_log_id);
                }
                            
                //$task_return = $this->session->userdata('task_return');               
                //header("Location: " . $this->config->config["index_url"] . $this->session->userdata('task_return'));
                //echo $this->config->config["index_url"].$task_return;exit;
                header("Location: " . $this->config->config["index_url"] . $this->session->userdata('task_return'));
                return;
            }else{
                //$task_return = $this->session->userdata('task_return');               
                //echo $this->config->config["index_url"].$task_return;exit;
                $oasis = $this->oasis_model->getOasisData($visit_log_id);
                if(sizeof($oasis)>0){
                  $oasis = $oasis[0];
                  foreach($oasis as $key=>$val){    
                    if(strrpos($key, "_DT")!==false){
                      if(!is_null($val) AND strlen($val)>0 AND strpos($val,"-")!==FALSE){                              
                        list($Y,$M,$D) = explode("-",$val);
                        if($Y AND $M AND $D)
                        $oasis[$key] = $M."-".$D."-".$Y;              
                      }
                    }
                  }
                }
                
                $data['oasis'] = $oasis;
                
                $data['visit_log_id'] = $visit_log_id;
                $data['cancel_url'] = $this->config->config["index_url"] . $this->session->userdata('task_return');
                $this->load->view('task/documents/oasis_c_form',$data); 

                //$this->tpl->assign_include("dynamic_tpl", "mail/comnotes/compose_form");
                //$this->tpl->view("parts/ibase", $this->lang->language);
            
                    //echo "Visit Type Form not implemented...";
                    return false;
            }
        }
        
        if ($this->app->validateVisit($visit_log_id) == false) {        
            if($window=='nw'){
                $this->tpl->assign('continue_url', $config["index_url"] . "task/" . $visit_type->visit_program . "/index/" . $visit_log_id."/task/nw" );        
                $this->tpl->assign('cancel_action', 'window.close();window.opener.loadGrid();' );        
            }
            else{
                $this->tpl->assign('continue_url', $config["index_url"] . "task/" . $visit_type->visit_program . "/index/" . $visit_log_id );                
                $this->tpl->assign('cancel_action', 'history.go(-1);' );        
            }
      
            $this->tpl->assign('popupmessage', "Therapy Schedule not complying with 13th and 19th visit rules. Please review and correct." );                
            $this->tpl->assign('popuptitle', "Warning" );                
            $this->tpl->assign_include("dynamic_tpl", "task/documents/pre_opendocument");
            $this->tpl->view("parts/ibase", $this->lang->language);      
            return false;
        }
    
        $this->session->set_userdata('task_return', $task_return );

        if($window=='nw'){
          header("Location: " . $config["index_url"] . "task/" . $visit_type->visit_program . "/index/" . $visit_log_id."/task/nw");
        }
        else{
          header("Location: " . $config["index_url"] . "task/" . $visit_type->visit_program . "/index/" . $visit_log_id);
        }
            
    }
    
    function pdf ( $visit_log_id ) {
        $this->load->helper('visit_pdf');
        dorder_pdf($visit_log_id,'D');
        return;
    }
	
	function email_doctor_orders($task_ids) {
		//echo $task_ids;
		//echo "<pre>"; print_r($_POST); echo "</pre>";
		//echo "agency id" . $this->getAgencyId();
		
		$agency_id = $this->getAgencyId();    
        $agency = $this->agencymdl->getByAgencyId($agency_id);
	

		$this->tpl->assign("agency", $agency);
		$this->tpl->assign("task_ids", $task_ids);	
		
		$agency_email = "";
		$recods = explode(",", $task_ids);
		$same_agency_id = '';
		$records_are_from_save_agency = true;
		foreach ($recods as $visit_log_id) {
			if ($agency->agency_type == "A") {
				$visit_log = $this->visitlogmdl->getById2($visit_log_id, "A");
				$C = $this->agencymdl->getByAgencyId($visit_log->contractor_id);
				if($same_agency_id == "" || $visit_log->contractor_id == $same_agency_id) {
					$same_agency_id = $visit_log->contractor_id;
				} else {
					$records_are_from_save_agency = false;
				}
				$agency_email =  $C->agency_email;	
			} else {
				$visit_log = $this->visitlogmdl->getById2($visit_log_id, "C");
				$A = $this->agencymdl->getByAgencyId($visit_log->agency_id);
				if($same_agency_id == "" || $visit_log->agency_id == $same_agency_id) {
					$same_agency_id = $visit_log->agency_id;
				} else {
					$records_are_from_save_agency = false;
				}				
				$agency_email =  $A->agency_email; 
			}
		}
		$this->tpl->assign("agency_email", $agency_email);
		$this->tpl->assign("records_are_from_save_agency", $records_are_from_save_agency);
		
		$rules = array (
			'email' 	=> 'required',
			'subject' 	=> 'required'
		);		
		$this->validation->set_rules($rules);	
		if ($this->validation->run() == FALSE) {
			
			/*$company_info = $this->agencymdl->getByAgencyId($this->getAgencyId());      
			$this->tpl->assign("agency_email", $company_info->agency_email);*/
			
			$this->tpl->assign_include("dynamic_tpl", "doctorder/manageorder/email_doctor_orders");
			$this->tpl->view("parts/ibase", $this->lang->language);
		} else {


			if (!is_null($this->input->post('tasks_ids'))) {
				//$this->load->library('Wick');
				
				//var_dump($this->input->post('tasks_ids'));exit;
				$record_ids = $this->input->post('tasks_ids');
				$recods = explode(",", $record_ids);
				
				$filenames = array();
				$this->load->helper('visit_pdf');
				foreach ($recods as $visit_log_id) {
					// update into database
					$this->visitlogmdl->updateSentTo($visit_log_id);
					$visit_log = $this->visitlogmdl->getById($visit_log_id);
					$visit_type = $this->visittypemdl->getById($visit_log->visit_type_id);
					
					if ($visit_type->visit_program == null) {
						continue;
					}
					$method = $visit_type->visit_program.'_pdf';
					
					if(!function_exists($method)){          
						continue;
					}
					
					$this->load->model($visit_type->visit_program.'mdl');
					
					if(!isset($filenames[$visit_log_id])){
						$filenames[$visit_log_id] = $method($visit_log_id);
					}
					//break;
					//$this->config->config['index_url']."task/".$prtqueue->visit_program."/pdf/".$prtqueue->visit_log_id;
				}
				
				/** 
		      	* New Code support >= PHP 5.3.0
		      	*/
				require_once(APPPATH.'third_party/itbz/fpdf/FPDF.php');          
				require_once(APPPATH.'third_party/itbz/fpdi/FPDI.php');          
				require_once(APPPATH.'third_party/Jurosh/PDFMerge/PDFMerger.php');          
				// and we can do stuff
				$pdf = new \Jurosh\PDFMerge\PDFMerger;
				
				foreach($filenames as $name){
					$pdf->addPDF($name, 'all');
				}   
				//print_r($filenames); exit;
				$filepath = FCPATH;
				$filepath = str_replace("\\","/", $filepath);
				$filepath = $filepath.'tmp/';
				//$return = $pdf->merge('string', "all.pdf");
				$combined_file = "orders_pdf_" . time() . ".pdf";
				try{
					$pdf->merge('file', $combined_file);	
				}
				catch (Exception $e) {
					//echo 'Caught exception: ',  $e->getMessage(), "\n";
				}	
				// End of code for PHP >= 5.3.0
						
			
				$this->load->library('email');
				$this->email->from('noreply@homehealthsoft.com', 'HHS Notification');
				$this->email->to($this->input->post('email'));			
				$this->email->subject($this->input->post('subject'));
				$body = "** This is a no-reply email ** - Please respond through the HHS application internal email system if necessary\n\n".$this->input->post('special_notes');
      			// $this->email->set_mailtype("html"); 
				$this->email->message($body); 
				     
				foreach($filenames as $file){
					$this->email->attach($file);
				}
				//$this->email->print_debugger();
				$this->email->send();
				
				$this->email->clear();
				//@unlink($final_file);	
				
				foreach($filenames as $name){
					@unlink($name);
				}	
				@unlink($combined_file);
				echo "Email has been sent";
			
			}
		}
	}
}	