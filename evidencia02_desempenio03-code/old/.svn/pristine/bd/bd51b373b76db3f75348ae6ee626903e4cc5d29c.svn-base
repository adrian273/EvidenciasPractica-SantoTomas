<?php

 class PtPnMdl extends Model {

	var $pt_clinical_visit_id;
	var $visit_log_id;
	var $primary_diag;
	var $secondary_diag;
  	var $primary_diag_date;
	var $secondary_diag_date;  
	var $bp;
	var $temp;
	var $resp;
	var $pulse;
	var $provider;
	var $provider_sign_date;
	var $order_written;
	var $bedbound_chair_wheelchair;
	var $requires_assistive_device;
	var $unsteady_gait;
	var $fatigue;
	var $poor_endurance;
	var $severe_disabling_pain;
	var $needs_assis_leave_house;
	var $subj_text;
	var $subj_pain_level;
	var $tab_075_pain_level;
	var $modif_pain;
	var $subj_hours_since_last;
	var $subj_mins_since_last;
	var $pain_location;
	var $tab_024_trans_sit_stand;
	var $trans_sit_stand_notes;
	var $tab_024_standing_pivot;
	var $standing_pivot_notes;
	var $tab_024_trans_shower_tub;
	var $trans_shower_tub_notes;
	var $tab_024_rolling_walker;
	var $rolling_walker_notes;
	var $tab_024_walker;
	var $walker_notes;
	var $tab_024_quad_cane;
	var $quad_cane_notes;
	var $tab_024_no_device;
	var $no_device_notes;
	var $tab_024_supine_to_sit;
	var $supine_to_sit_notes;
	var $tab_024_rolling;
	var $rolling_notes;
	var $tab_024_scooting;
	var $scooting_notes;
	var $tab_024_wheelchair_movility;
	var $wheelchair_movility_notes;
	var $modalities_na;
	var $modalities_text;
	var $modalities_thermal;
	var $modalities_electrical;
	var $manual_therapy_na;
	var $manual_therapy_status;
	var $balance_training_na;
	var $balance_training_text;
	var $ther_exer_rom_ues;
	var $ther_exer_rom_les;
	var $ther_exer_rom_nbr_exer;
	var $ther_exer_rom_reps;
	var $ther_exer_rom_sets;
	var $ther_exer_stren_ues;
	var $ther_exer_stren_les;
	var $ther_exer_stren_nbr_exer;
	var $ther_exer_stren_reps;
	var $ther_exer_stren_sets;
	var $ther_exer_comments;
	var $gait_comments;
	var $coord_md;
	var $coord_rn;
	var $coord_lvn;
	var $coord_aide;
	var $coord_pt;
	var $coord_ot;
	var $coord_st;
	var $coord_msw;
	var $coord_ptcg;
	var $coord_tl;
	var $coord_other;
	var $coord_oth_text;
	var $educ_train_patient;
	var $educ_train_caregiver;
	var $educ_train_body_mechanics;
	var $educ_train_positioning_turning;
	var $educ_train_safety_measures;
	var $educ_train_false_precautions;
	var $educ_train_hip_precautions;
	var $educ_train_knee_precautions;
	var $educ_train_back_precautions;
	var $educ_train_pain;
	var $educ_train_energy_conserv;
	var $educ_train_hep;
	var $educ_train_other;
	var $educ_train_other_text;
	var $resp_instr_needs_further_instr;
	var $resp_instr_able_perform_proced;
	var $resp_instr_repeats_instruct_comp_accur;
	var $resp_instr_verba_unders_hesit;
	var $resp_instr_comments;
	var $day30_assess;
	var $day30_assess_text;
	var $ppn_vsbp_sisto;
	var $ppn_vsbp_dias;
	var $ppn_vital_sign_pulse;
	var $ppn_vital_sign_respiration;
	var $dc_plan_conti_progress;
	var $dc_plan_5_day_given;
	var $dc_plan_other;
	var $dc_plan_comments;
  	var $ther_na;
	var $ther_name;
  	var $ther_implem_plan;
  	var $ther_follow_plan;
  	var $ther_raport_pat_fam; 
  	var $ther_eval_plan;
  	var $ther_notes;
	var $ther_supervisor;
	var $addendum;
	var $supervisor_signed;
	var $upload_document_name;
	var $upload_document_name2;
	var $rom_na;
	var $strength_na;

	var $p2_return_to_pre;
	var $p2_return_to_pre_weeks;
	var $p2_return_to_pre_met;
	var $p2_return_to_pre_on_date;

	var $p2_patient_will;
	var $p2_patient_will_weeks;
	var $p2_patient_will_met;
	var $p2_patient_will_on_date;
	
	var $p2_return_to_opti;
	var $p2_return_to_opti_weeks;
	var $p2_return_to_opti_met;
	var $p2_return_to_opti_on_date;
	
	var $p2_demost_eff;
	var $p2_demost_eff_weeks;
	var $p2_demost_eff_met;
	var $p2_demost_eff_on_date;
	
	var $p2_improv_bed_mov;
	var $p2_improv_bed_mov_desc1;
	var $p2_improv_bed_mov_weeks;
	var $p2_improv_bed_mov_met;
	var $p2_improv_bed_mov_on_date;
	
	var $p2_improv_bed_mov_indep;
	var $p2_improv_bed_mov_indep_weeks;
	var $p2_improv_bed_mov_indep_met;
	var $p2_improv_bed_mov_indep_on_date;	

	var $p2_improv_trans;
    var $p2_improv_trans_desc1;
    var $p2_improv_trans_desc2;
    var $p2_improv_trans_weeks;
    var $p2_improv_trans_met;
    var $p2_improv_trans_on_date;

	var $p2_indep_trans;
	var $p2_indep_trans_weeks;
	var $p2_indep_trans_met;
	var $p2_indep_trans_on_date;

	var $p2_pat_indep;
    var $p2_pat_indep_weeks;
    var $p2_pat_indep_met;
    var $p2_pat_indep_on_date;

    var $p2_improv_wheel;
    var $p2_improv_wheel_desc;
    var $p2_improv_wheel_weeks;
    var $p2_improv_wheel_met;
    var $p2_improv_wheel_on_date;

	var $p2_pat_ambul;
	var $p2_pat_ambul_desc1;
	var $p2_pat_ambul_desc2;
	var $p2_pat_ambul_weeks;
	var $p2_pat_ambul_met;
	var $p2_pat_ambul_on_date;

	var $p2_climb;
    var $p2_climb_desc1;
    var $p2_climb_desc2;
    var $p2_climb_met;
    var $p2_tab_063_climb_weeks;
    var $p2_climb_on_date;

    var $p2_indep_ambul;
    var $p2_indep_ambul_desc;
    var $p2_indep_ambul_weeks;
    var $p2_indep_ambul_met;
    var $p2_indep_ambul_on_date;

    var $p2_ambul_endur;
    var $p2_ambul_endur_desc1;
    var $p2_ambul_endur_desc2;
    var $p2_ambul_endur_weeks;
    var $p2_ambul_endur_met;
    var $p2_ambul_endur_on_date;

    // var $p2_increa_stren_UE_R;
    // var $p2_increa_stren_UE_L;
    var $p2_increa_stren_UE;
    var $p2_increa_stren_UE_5;
    var $p2_increa_stren_UE_weeks;
    var $p2_increa_stren_UE_met;
    var $p2_increa_stren_UE_on_date;

    // var $p2_increa_stren_LE_R;
    // var $p2_increa_stren_LE_L;
    var $p2_increa_stren_LE;
    var $p2_increa_stren_LE_5;
    var $p2_increa_stren_LE_weeks;
    var $p2_increa_stren_LE_met;
    var $p2_increa_stren_LE_on_date;

    var $p2_increa_rom;
    var $p2_increa_rom_desc1;
    var $p2_increa_rom_desc2;
    var $p2_increa_rom_desc3;
    var $p2_increa_rom_weeks;
    var $p2_increa_rom_met;
    var $p2_increa_rom_on_date;

    var $p2_increa_rom2;
    var $p2_increa_rom2_desc1;
    var $p2_increa_rom2_desc2;
    var $p2_increa_rom2_desc3;
    var $p2_increa_rom2_weeks;
    var $p2_increa_rom2_met;
    var $p2_increa_rom2_on_date;

    var $p2_demos_rom;
    var $p2_demos_rom_weeks;
    var $p2_demos_rom_met;
    var $p2_demos_rom_on_date;

    var $p2_demos_proper;
    var $p2_demos_proper_prosthe;
    var $p2_demos_proper_brace;
    var $p2_demos_proper_splint;
    var $p2_demos_proper_weeks;
    var $p2_demos_proper_met;
    var $p2_demos_proper_on_date;

    var $p2_demos_proper_dme;
    var $p2_demos_proper_dme_weeks;
    var $p2_demos_proper_dme_met;
    var $p2_demos_proper_dme_on_date;

    var $p2_tinetti_bal;
    var $p2_tinetti_bal_score;
    var $p2_tinetti_bal_weeks;
    var $p2_tinetti_bal_met;
    var $p2_tinetti_bal_on_date;

    var $p2_improv_score;
    var $p2_improv_score_desc1;
    var $p2_improv_score_desc2;
    var $p2_improv_score_met;
    var $p2_improv_score_on_date;

    var $p2_follow_exer;
    var $p2_follow_exer_date;
    var $p2_follow_exer_met;
    var $p2_follow_exer_on_date;

    var $p2_other3;
    var $p2_other3_desc;
    var $p2_other3_weeks;
    var $p2_other3_met;
    var $p2_other3_on_date;

    var $p2_other4;
    var $p2_other4_desc;
    var $p2_other4_weeks;
    var $p2_other4_met;
    var $p2_other4_on_date;

    var $p2_other5;
    var $p2_other5_desc;
    var $p2_other5_weeks;
    var $p2_other5_met;
    var $p2_other5_on_date;

    var $p2_other6;
    var $p2_other6_desc;
    var $p2_other6_weeks;
    var $p2_other6_met;
    var $p2_other6_on_date;


	function PtPnMdl () {

		parent::Model();
		
	}

	function getEmpty ( ) {
		return $this;
	}
	
	function get ( $visit_log_id ) {
	
		$this->db->where('visit_log_id', $visit_log_id);
	
		$query = $this->db->get('vt12_pt_progress_note');
		return $query->row();
	
	}

	function insert () {
	
		$this->db->insert('vt12_pt_progress_note', $this);
	
	}
	
	function update ( $visit_log_id ) {
	
		unset($this->pt_clinical_visit_id);
	
		$this->db->where('visit_log_id', $visit_log_id);
	
		$this->db->update('vt12_pt_progress_note', $this);
	
	}

	function updateFlex($visit_log_id, $attribute, $value, $where = 'visit_log_id') {

        $this->db->where($where, $visit_log_id);
        $this->db->set($attribute, $value);

        $this->db->update('vt12_pt_progress_note');

    }
    	

	function getPrevious ( $user_id=null, $previous_date, $episode_id, $allepisodes=false ) {

    $soc_id = null;
    if($allepisodes AND $episode_id){      
      $this->db->select('soc_id');
      $this->db->where('cms485_id', $episode_id);
      $query = $this->db->get('cms_485');    
      $row = $query->row_array();
      $soc_id = $row['soc_id'];
    }
    
		$this->db->join('vis_visit_log',   'vis_visit_log.visit_log_id = vt12_pt_progress_note.visit_log_id');
		if (!is_null($user_id)) $this->db->where('visit_user_id', $user_id);
		
		$this->db->where('visit_date_time <', $previous_date);
		$this->db->where('visit_status_id != 1');
		$this->db->where('visit_type_id != 320');
		
    if(!is_null($soc_id)){
      $this->db->join('cms_485',   'cms_485.soc_id = '.$soc_id);
      $this->db->where('vis_visit_log.cms485_id=cms_485.cms485_id');
      $this->db->group_by('vis_visit_log.visit_log_id');      
    }else{
      $this->db->where('cms485_id', $episode_id);
		}
    
		$this->db->order_by('visit_date_time');		
		$query = $this->db->get('vt12_pt_progress_note');    
		return $query->result();
		
	}

	/**
	 * Get previous latest PTEV or PTPN whatever comes first. 
	 * This function is used to retrieve "Short Term and Long Term Goals with Time Frames" from previous PTEV or PTPN.
	 *
	 * @access public
	 * @param string $previous_date
	 * @param integer $episode_id
	 * @param boolean $allepisodes
	 * @return boolean|object 
	 */
	function getPreviousGoals ( $previous_date, $episode_id, $allepisodes=false )
	{

	    $soc_id = null;
	    if($allepisodes AND $episode_id){      
	      $this->db->select('soc_id');
	      $this->db->where('cms485_id', $episode_id);
	      $query = $this->db->get('cms_485');    
	      $row = $query->row_array();
	      $soc_id = $row['soc_id'];
	    }
    
		$this->db->where('visit_date_time <', $previous_date);
		$this->db->where('visit_status_id != 1');
		$this->db->where_in('visit_type_id', array(10, 12));
		
	    if(!is_null($soc_id)){
	      $this->db->join('cms_485',   'cms_485.soc_id = '.$soc_id);
	      $this->db->where('vis_visit_log.cms485_id=cms_485.cms485_id');
	      $this->db->group_by('vis_visit_log.visit_log_id');      
	    }else{
      		$this->db->where('cms485_id', $episode_id);
		}
    
		$this->db->order_by('visit_date_time', 'DESC');		
		$query = $this->db->get('vis_visit_log');    
		if ($query->num_rows() > 0) {
			$visit = $query->row();
			
			$table = '';
			switch ($visit->visit_type_id) {
				case '10':
					$table = 'vt_pt_evaluation';
					break;
				case '12':
					$table = 'vt12_pt_progress_note';
					break;
			}

			$this->db->where('visit_log_id', $visit->visit_log_id);
			$query = $this->db->get($table);
			return $query->row();
		} else {
			return false;
		}
	}
	
  function getNext ( $user_id=null, $previous_date, $episode_id ) {
		
		$this->db->join('vis_visit_log',   'vis_visit_log.visit_log_id = vt12_pt_progress_note.visit_log_id');
		if (!is_null($user_id)) $this->db->where('visit_user_id', $user_id);
		//$this->db->where('visit_user_id', $user_id);
		$this->db->where('visit_date_time >', $previous_date);
		$this->db->where('cms485_id', $episode_id);
		$this->db->where('visit_status_id != 1');
		// $this->db->where('visit_type_id != 320');
		$this->db->where('visit_type_id', 12);
		
		$this->db->order_by('visit_date_time', 'ASC');
		
		$query = $this->db->get('vt12_pt_progress_note');
    //echo $this->db->last_query();exit;
		return $query->result();
		
	}
	
	function copy ( $destination_visit_log_id, $source_visit_log_id ) {

		$object = new PtPnMdl();
		$object1 = $this->get($destination_visit_log_id);
		$object = $this->get($source_visit_log_id);
		
		$object->pt_clinical_visit_id = $object1->pt_clinical_visit_id;
		$object->visit_log_id = $destination_visit_log_id;
	
		$this->db->where('visit_log_id', $destination_visit_log_id);
		$this->db->update('vt12_pt_progress_note', $object);
		
	}
	
 }
